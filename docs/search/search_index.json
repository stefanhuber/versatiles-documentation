{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"VersaTiles","text":"<p>VersaTiles is a completely FLOSS stack for generating, distributing, and using map tiles based on OpenStreetMap data, free of any commercial interests.</p>"},{"location":"#example-to-use-our-map","title":"Example to use our Map","text":"Copy/Paste Example<pre><code>&lt;!-- add MapLibre JavaScript and CSS --&gt;\n&lt;script src=\"https://tiles.versatiles.org/assets/maplibre-gl/maplibre-gl.js\"&gt;&lt;/script&gt;\n&lt;link href=\"https://tiles.versatiles.org/assets/maplibre-gl/maplibre-gl.css\" rel=\"stylesheet\" /&gt;\n\n&lt;!-- add container for the map --&gt;\n&lt;div id=\"map\" style=\"width:100%;aspect-ratio:16/9\"&gt;&lt;/div&gt;\n\n&lt;!-- start map --&gt;\n&lt;script&gt;\n  new maplibregl.Map({\n    container: 'map',\n    style: 'https://tiles.versatiles.org/assets/styles/colorful.json'\n  }).addControl(new maplibregl.NavigationControl());\n&lt;/script&gt;\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<ul> <li>Basics</li> <li>Compendium</li> <li>Guides</li> </ul>"},{"location":"basics/frontend.ko/","title":"VersaTiles \ud504\ub860\ud2b8\uc5d4\ub4dc","text":"<p>\uc11c\ubc84\uc5d0\uc11c\ub294 \ubca1\ud130 \ud0c0\uc77c\uc5d0 \ub300\ud55c \uc815\ubcf4\ub9cc \uc81c\uacf5\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub300\ud654\ud615 \uc6f9 \ub9f5\uc5d0\ub294 \ub354 \ub9ce\uc740 \uac83\ub4e4\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. - \ub85c\ub529, \uadf8\ub9ac\uae30 \ubc0f \uc0ac\uc6a9\uc790 \uc0c1\ud638\uc791\uc6a9\uc744 \ucc98\ub9ac\ud558\ub294 MapLibre GL JS\uc640 \uac19\uc740 JavaScript \ub77c\uc774\ube0c\ub7ec\ub9ac. - \ubca1\ud130 \ud0c0\uc77c\uc744 \uadf8\ub9ac\ub294 \ubc29\ubc95\uc744 \uc815\uc758\ud558\ub294 \uc2a4\ud0c0\uc77c. - \ub9f5\uc758 \ub808\uc774\ube14 \ubc0f \ub9c8\ucee4\uc5d0 \ub300\ud55c \uae00\uaf34 \ubc0f \uae30\ud638.</p> <p><code>versatiles</code>\ub97c \ub354\uc6b1 \uc27d\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ubaa8\ub4e0 \uac83\uc774 \ucef4\ud329\ud2b8\ud55c \ud328\ud0a4\uc9c0\ub85c \uc900\ube44\ub418\uc5c8\uc2b5\ub2c8\ub2e4.</p>"},{"location":"basics/frontend.ko/#tarball","title":"\ud504\ub860\ud2b8\uc5d4\ub4dc Tarball \ud328\ud0a4\uc9c0","text":"<p>Release \ud398\uc774\uc9c0\uc5d0\uc11c \ud504\ub860\ud2b8\uc5d4\ub4dc \uc804\uccb4 \ud30c\uc77c\uc744 tarball\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4.  </p> <p>\uc544\ub798 \uba85\ub839\uc5b4\ub294 <code>frontend.tar.gz</code> \ud30c\uc77c\uc744 \ud604\uc7ac \ub514\ub809\ud1a0\ub9ac\ub85c \ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0 <code>frontend.d</code> \ub514\ub809\ud1a0\ub9ac\uc5d0 \uc555\ucd95 \ud574\uc81c\ud569\ub2c8\ub2e4 <pre><code>wget \"https://github.com/versatiles-org/versatiles-frontend/releases/latest/download/frontend.tar.gz\"\nmkdir -p frontend.d &amp;&amp; tar -zxvf frontend.tar.gz -C frontend.d\n</code></pre></p>"},{"location":"basics/frontend.ko/#versatiles_1","title":"\uc555\ucd95 \ud574\uc81c\ub41c \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec <code>versatiles</code> \uc2e4\ud589","text":"<p>\uc544\ub798 \uba85\ub839\uc5b4\ub294 <code>-s</code> \ub610\ub294 <code>--static</code> \uc635\uc158\uc73c\ub85c  <code>frontend.d</code> \ub514\ub809\ud1a0\ub9ac\uc758 \uc815\uc801 \ud30c\uc77c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. <pre><code>versatiles osm.versatiles --static frontend.d\n</code></pre></p>"},{"location":"basics/frontend.ko/#brotli","title":"\ud504\ub860\ud2b8\uc5d4\ub4dc Brotli \ud328\ud0a4\uc9c0","text":"<p>Brotli\ub85c \uc555\ucd95\ub41c \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uba74 \uc11c\ubc84\uc758 CPU \ubd80\ud558\ub97c \uc904\uc774\uace0 \uc131\ub2a5\uc744 \ucd5c\uc801\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p> <p>\uc774 \uba85\ub839\uc5b4\ub294 <code>frontend.br.tar</code> \ud30c\uc77c\uc744 \ud604\uc7ac \ub514\ub809\ud1a0\ub9ac\ub85c \ub2e4\uc6b4\ub85c\ub4dc\ud569\ub2c8\ub2e4.</p> <pre><code>wget \"https://github.com/versatiles-org/versatiles-frontend/releases/latest/download/frontend.br.tar\"\n</code></pre>"},{"location":"basics/frontend.ko/#brotli-versatiles","title":"Brotli \uc555\ucd95 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec <code>versatiles</code> \uc2e4\ud589","text":"<p>\uc544\ub798 \uba85\ub839\uc5b4\ub294 <code>-s</code> \ub610\ub294 <code>--static</code> \uc635\uc158\uc73c\ub85c <code>frontend.br.tar</code> \ud30c\uc77c\uc5d0 \ud3ec\ud568\ub41c \uc815\uc801 \ud30c\uc77c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. <pre><code>versatiles osm.versatiles --static frontend.br.tar\n</code></pre></p>"},{"location":"basics/frontend.ko/#_1","title":"\uc5b4\ub5bb\uac8c \ube4c\ub4dc\ud558\ub098\uc694?","text":"<p>\uc6b0\ub9ac\ub294 versatiles-frontend Repo\uc5d0\uc11c \ud504\ub860\ud2b8\uc5d4\ub4dc\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4. GitHub \uc6cc\ud06c\ud50c\ub85c\uac00 \ube4c\ub4dc \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. - MapLibre GL JS\uc758 \ucd5c\uc2e0 \ubc84\uc804 - \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 \uc2a4\ud0c0\uc77c \ubc0f \uc2a4\ud504\ub77c\uc774\ud2b8: versatiles-styles - \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc758 \uae00\uaf34(\uae00\ub9ac\ud504): versatiles-fonts</p> <p>\ub354\uc6b1 \uc26c\uc6b4 \ubc30\ud3ec\ub97c \uc704\ud558\uc5ec TAR \ub0b4\ubd80\uc758 \ubaa8\ub4e0 \ud30c\uc77c\uc744 brotli\ub85c \uc0ac\uc804 \uc555\ucd95\ud588\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c \ud328\ud0a4\uc9c0\uc5d0 \ud2b9\uc774\ud55c \ud30c\uc77c \ud655\uc7a5\uc790 <code>.br.tar</code>\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc21c\uc11c\ub97c <code>.tar.br</code>\ub85c \ubcc0\uacbd\ud558\ub294 \uac83\uc740 \uc798\ubabb\ub41c \uac83\uc785\ub2c8\ub2e4. TAR \ucee8\ud14c\uc774\ub108 \uc790\uccb4\ub294 \uc555\ucd95\ub418\uc9c0 \uc54a\uc558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.</p>"},{"location":"basics/frontend/","title":"The VersaTiles frontend","text":"<p>The server only provides vector tiles. But you need more to have an interactive web map. You also need: - A JavaScript library like MapLibre GL JS, that will handle loading, drawing and user interactions. - Styles that define, how the vector tiles should be drawn. - Fonts and symbols for labels and markers on the map.</p> <p>To make it easier for you we prepared and bundled everything in a compact package that is ready to use.</p>"},{"location":"basics/frontend/#download-the-frontend","title":"Download the frontend","text":"<p>We release the frontend as a TAR file here. The package <code>frontend.br.tar</code> contains all the files but pre-compressed with Brotli so that the server can provide the compressed files with minimal CPU load.</p> <p>To download it just run: <pre><code>wget \"https://github.com/versatiles-org/versatiles-frontend/releases/latest/download/frontend.br.tar\"\n</code></pre></p>"},{"location":"basics/frontend/#how-is-it-build","title":"How is it build?","text":"<p>We maintain the frontend in the repo: versatiles-frontend. A GitHub workflow triggers the build script. It then bundles: - the latest version of MapLibre GL JS - styles and sprites from the repo: versatiles-styles - fonts (glyphs) from the repo: versatiles-fonts</p> <p>To make it even easier we precompressed all files inside the TAR with brotli. That's why the package has the unusual file extension <code>.br.tar</code>. Changing the order to <code>.tar.br</code> would be wrong because the TAR container itself is not compressed.</p>"},{"location":"basics/versatiles/","title":"Versatiles","text":"<p>Using free map tiles is quite difficult. You have to generate tiles, prepare them for the server, deploy a server, handle the network and add a frontend. VersaTiles is not trying to fix just one problem, but the whole chain at once.</p>"},{"location":"basics/versatiles/#core-idea","title":"Core idea","text":"<p>VersaTiles is a stack that defines how OpenStreetMap data can be processed and served to create interactive web maps.</p> <p></p> <p>It specifies some basic architectural choices and provides a standard implementation, while leaving open the possibility to deviate from it.</p> <ul> <li>The Generator uses the latest OSM dump to generate vector tiles. We are using tilemaker to generate vector tiles in shortbread scheme.</li> <li>The Converter prepares these tiles for the server by pre-compressing, cleaning and converting them into a versatiles container.</li> <li>The Server serves the vector tiles via HTTP.</li> <li>The Proxy handles network stuff like TLS certificates, caching, load balancing, CORS etc.</li> <li>The Frontend loads and renders the vector tiles. We recommend MapLibre GL JS.</li> </ul>"},{"location":"basics/versatiles/#versatiles-is-open-and-free","title":"Versatiles is open and free","text":"<p>To ensure the four essential freedoms of Free Software, we have developed some goals that we try to keep in mind in every decision we make:</p>"},{"location":"basics/versatiles/#core-ideals","title":"Core ideals","text":"<ul> <li>Everything should be open Every piece of code, script and data should be documented, understandable and reproducible.</li> <li>Minimal licences Use MIT and CC0, remove proprietary parts. The only attribution should be to the data source: \"\u00a9 OpenStreetMap contributors\".</li> <li>Keep it simple Focus on core functionality that everyone needs. Less features for special cases. Prefer simple solutions that allow more flexibility. Minimal dependencies.</li> <li>Include everyone Don't focus on your problems or the problems of a particular group. Instead, build solutions that everyone needs: from beginners to professionals, from hobbyists to cooperations.</li> <li>Look forward Focus on solutions that have a long-term future.</li> </ul>"},{"location":"basics/versatiles/#contribute-to-the-project","title":"Contribute to the project","text":"<p>As an open source project, we encourage you to contribute to the VersaTiles project by submitting bug reports, feature requests, or code contributions to github.com/versatiles-org</p>"},{"location":"basics/versatiles/#key-decisions","title":"Key decisions","text":""},{"location":"basics/versatiles/#use-vector-tiles","title":"Use vector tiles","text":"<p>Image tiles are great for satellite and aerial photography. But maps, which are essentially vector graphics, are a perfect fit for vector tiles.</p>"},{"location":"basics/versatiles/#use-containers-instead-of-databases","title":"Use containers instead of databases","text":"<p>Databases are powerful and flexible tools for handling large amounts of data. Unfortunately they have some major drawbacks: Importing a lot of data (e.g. OSM planet) is very slow, they take up a lot of disk space, they're hard to set up and maintain, they're a security risk, and it's hard to integrate them into a scalable infrastructure.</p> <p>VersaTiles uses it's own container format. Think of it as a single file database that can only handle map tiles.</p>"},{"location":"basics/versatiles/#shortbread-instead-of-openmaptiles","title":"Shortbread instead of OpenMapTiles","text":"<p>The OpenMapTiles schema is \"open\" but not free, so we removed it. We use and support Shortbread instead.</p>"},{"location":"basics/versatiles/#covering-use-cases-from-private-projects-to-scalable-infrastructures","title":"Covering use cases from private projects to scalable infrastructures","text":"<p>An infrastructure is perfect, when everyone loves and uses it. That's why we want everyone to be able to use their own map server ... as a hobby project on a Raspberry Pi or as a powerful scalable infrastructure in the cloud.</p>"},{"location":"basics/versatiles_server.ko/","title":"VersaTiles \uc2e4\ud589","text":"<p><code>versatiles</code>\uc758 \uc8fc\uc694 \uad6c\uc131 \uc694\uc18c\uc640 \uae30\ub2a5\uc744 \uc0b4\ud3b4\ubd05\ub2c8\ub2e4.</p>"},{"location":"basics/versatiles_server.ko/#_1","title":"\ud30c\uc77c \ud615\uc2dd","text":"<p>VersaTiles\uc758 \ud575\uc2ec \uac1c\ub150 \uc911 \ud558\ub098\ub294 \ub9f5 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud558\uae30 \uc704\ud55c \uace0\uc720\ud55c .versatiles \ud30c\uc77c \ud615\uc2dd\uc785\ub2c8\ub2e4. \uc774 \ud615\uc2dd\uc740 \ud589\uc131 \uc804\uccb4\uc758 \ubaa8\ub4e0 \ub9f5 \ud0c0\uc77c\uc744 \ud3ec\ud568\ud560 \ubfd0\ub9cc \uc544\ub2c8\ub77c \ud30c\uc77c \ub0b4\uc5d0\uc11c \ud574\ub2f9 \ubc14\uc774\ud2b8 \uc624\ud504\uc14b\uacfc \uae38\uc774\ub97c \ud3ec\ud568\ud55c \ubaa8\ub4e0 \ub9f5 \ud0c0\uc77c\uc758 \uc778\ub371\uc2a4\ub3c4 \ud3ec\ud568\ud569\ub2c8\ub2e4.</p> <p>.versatiles \ud615\uc2dd\uc758 \uc9c4\uc9dc \ub9e4\ub825\uc740 \ub85c\uceec\uc5d0 \uc800\uc7a5\ud560 \ud544\uc694\uac00 \uc5c6\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \ub300\uc2e0 \uc608\ub97c \ub4e4\uc5b4 HTTP\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6d0\uaca9\uc73c\ub85c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 <code>versatiles</code>\uac00 \ud544\uc694\ud55c \ub9f5 \ud0c0\uc77c \ub370\uc774\ud130\uac00 \ud3ec\ud568\ub41c .versatiles \ud30c\uc77c\uc758 \ud2b9\uc815 \ubd80\ubd84\uc744 \uac80\uc0c9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 HTTP \ubc14\uc774\ud2b8 \ubc94\uc704 \uc694\uccad \ub355\ubd84\uc5d0 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 <code>versatiles</code>\ub294 \uc804\uccb4 .versatiles \ud30c\uc77c\uc744 \ub85c\uceec\uc5d0 \ub450\uc9c0 \uc54a\uace0\ub3c4 \ub9f5 \ud0c0\uc77c\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 VersaTiles\ub85c \ud655\uc7a5 \uac00\ub2a5\ud55c \ub9f5 \uc778\ud504\ub77c\ub97c \ud6e8\uc52c \ub354 \uc27d\uac8c \uad6c\ucd95\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>HTTP \ubc14\uc774\ud2b8 \ubc94\uc704 \uc694\uccad\uc744 \ud1b5\ud574 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uac1c\ubc1c\ud55c\ub2e4\ub294 \uc544\uc774\ub514\uc5b4\ub294 COMTiles \ubc0f PMTiles\ub97c \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc6b0\ub9ac\ub294 \uc57d\uac04 \ub2e4\ub978 \ubd80\ubd84\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd94\uace0, \ud544\uc694\ud55c \uacbd\uc6b0 \uc774\uc804 \uad6c\ud604\uc5d0\uc11c \ubc97\uc5b4\ub098\uc57c \ud560 \ud544\uc694\uc131\uc744 \ub290\uaf08\uae30 \ub54c\ubb38\uc5d0 \uc790\uccb4 \ud45c\uc900\uc744 \uac1c\ubc1c\ud558\uae30\ub85c \uacb0\uc815\ud588\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc6b0\ub9ac\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c \ub300\uc548\uc73c\ub85c COMTiles \ubc0f PMTiles\ub97c \uc9c0\uc6d0\ud558\ub294 \ub370 \ub9e4\uc6b0 \uc5f4\ub824 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"basics/versatiles_server.ko/#_2","title":"\uc124\uce58 \ubc0f \uc124\uc815","text":"<ul> <li>VersaTiles\ub97c \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4: VersaTiles \uc124\uce58 </li> <li>VersaTiles \uc2e4\ud589\uc744 \uc704\ud558\uc5ec \ud589\uc131 \uc804\uccb4, \ub610\ub294 \uc77c\ubd80\ub97c \ud3ec\ud568\ud55c \ubca1\ud130 \ud0c0\uc77c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4: VersaTiles \ubca1\ud130 \ud0c0\uc77c \ub2e4\uc6b4\ub85c\ub4dc</li> </ul>"},{"location":"basics/versatiles_server.ko/#_3","title":"\uc0ac\uc6a9\ubc95","text":""},{"location":"basics/versatiles_server.ko/#_4","title":"\uc11c\ubc84 \uc2dc\uc791 \ubc0f \uae30\ubcf8 \uc0ac\uc6a9","text":"<ul> <li> <p>\uc11c\ubc84 \uc2dc\uc791: <code>versatiles server</code> \uba85\ub839\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ubc84\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc778 \uc0ac\uc6a9 \ubc29\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.  </p> <pre><code>versatiles server osm.versatiles\n</code></pre> <p>\uc774 \uba85\ub839\uc5b4\ub294 <code>osm.versatiles</code> \ud30c\uc77c\uc744 \uc18c\uc2a4\ub85c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ubc84\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4.</p> </li> <li> <p>\ub450 \uac1c \uc774\uc0c1\uc758 \uc18c\uc2a4: \ud30c\uc77c \uc774\ub984\uc744 \ub098\uc5f4\ud558\ub294 \ubc29\ubc95\uc73c\ub85c \uc11c\ubc84\uc5d0 \ub450 \uac1c \uc774\uc0c1\uc758 \uc18c\uc2a4\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p><pre><code>versatiles server osm.versatiles satellite_imagery.mbtiles my_overlay.tar\n</code></pre>  \uc704 \uc608\ub294 <code>osm.versatiles</code>, <code>satellite_imagery.mbtiles</code>, <code>my_overlay.tar</code>\uc758 \uc138 \uac00\uc9c0 \uc18c\uc2a4\ub97c \uc11c\ubc84\uc5d0 \ucd94\uac00\ud569\ub2c8\ub2e4.</p> </li> </ul> <p>\uc11c\ubc84\uac00 \uc2dc\uc791\ub418\uba74 \uac01 \uc18c\uc2a4\uc758 \ud30c\uc77c \uc774\ub984\uc5d0\uc11c \ud655\uc7a5\uc790\ub97c \uc81c\uc678\ud55c \ubd80\ubd84\uc774 URL \uacbd\ub85c\ub85c \uc790\ub3d9 \ub9e4\ud551\ub429\ub2c8\ub2e4.      - <code>/tiles/osm/*</code> &lt;- <code>osm.versatiles</code>      - <code>/tiles/satellite_imagery/*</code> &lt;- <code>satellite_imagery.mbtiles</code>      - <code>/tiles/my_overlay/*</code> &lt;- <code>my_overlay.tar</code></p>"},{"location":"basics/versatiles_server.ko/#url","title":"\uc0ac\uc6a9\uc790 \uc815\uc758 URL","text":"<ul> <li> <p>URL \uc0ac\uc6a9\uc790 \uc815\uc758: \uae30\ubcf8 URL \uacbd\ub85c \ub300\uc2e0 \uc0ac\uc6a9\uc790 \uc815\uc758 URL\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub54c \ub300\uad04\ud638\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc18c\uc2a4\uc640 URL\uc744 \ub9e4\ud551\ud569\ub2c8\ub2e4.</p> <p><pre><code>versatiles server \"[planet]osm.versatiles\" \"[satellite]satellite_imagery.mbtiles\" \"[heatmap]my_overlay.tar\"\n</code></pre> URL \ub9e4\ud551\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \ubcc0\uacbd\ub429\ub2c8\ub2e4: - <code>/tiles/planet/*</code> &lt;- <code>osm.versatiles</code> - <code>/tiles/satellite/*</code> &lt;- <code>satellite_imagery.mbtiles</code> - <code>/tiles/heatmap/*</code> &lt;- <code>my_overlay.tar</code></p> </li> </ul>"},{"location":"basics/versatiles_server.ko/#ip","title":"\ub2e4\ub978 IP/\ud3ec\ud2b8","text":"<p><code>versatiles</code>\ub294 \uae30\ubcf8\uc801\uc73c\ub85c <code>127.0.0.1:8080</code>\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc544\ub798 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec IP \uc8fc\uc18c\uc640 \ud3ec\ud2b8 \ubc88\ud638\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <ul> <li> <p>IP \uc8fc\uc18c \ubcc0\uacbd: \uc5ec\ub7ec IP \ub300\uc5ed\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 <code>-i</code> \ub610\ub294 <code>--ip</code> \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec IP \uc8fc\uc18c\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.</p> <pre><code>versatiles server --ip 0.0.0.0\n</code></pre> </li> <li> <p>\ud3ec\ud2b8 \ubc88\ud638 \ubcc0\uacbd: \ub2e4\ub978 \ud3ec\ud2b8 \ubc88\ud638\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 <code>-p</code> \ub610\ub294 <code>--port</code> \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ud2b8 \ubc88\ud638\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4.</p> <pre><code>versatiles server --port 80\n</code></pre> </li> </ul>"},{"location":"basics/versatiles_server.ko/#_5","title":"\ud504\ub860\ud2b8\uc5d4\ub4dc","text":"<p>\ucd5c\uc2e0 \ubc84\uc804\uc758 MapLibre GL JS, \ub9f5 \uc2a4\ud0c0\uc77c, \uae00\uaf34 \ubc0f \uae30\ud638\ub97c \ud3ec\ud568\ud55c \ud504\ub860\ud2b8\uc5d4\ub4dc\ub97c \uc120\ud0dd\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4: VersaTile \ud504\ub860\ud2b8\uc5d4\ub4dc </p> <pre><code>wget \"https://github.com/versatiles-org/versatiles-frontend/releases/latest/download/frontend.br.tar\"\nversatiles osm.versatiles --static frontend.br.tar\n</code></pre>"},{"location":"basics/versatiles_server.ko/#_6","title":"\ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \uac83\uc740 \ubb34\uc5c7\uc778\uac00\uc694?","text":"<p><code>versatiles</code>\ub294 \ud504\ub85c\uc81d\ud2b8\uc758 \uac04\ub2e8\ud558\uace0 \ube60\ub978 \uc720\uc9c0 \uad00\ub9ac\ub97c \uc704\ud558\uc5ec \ud575\uc2ec \uae30\ub2a5\ub9cc \uad6c\ud604\ud558\uc600\uc2b5\ub2c8\ub2e4. TLS \uc778\uc99d\uc11c\uc640 \uce90\uc2f1 \uae30\ub2a5\uc740 \uc11c\ubc84\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub300\uc548\uc73c\ub85c CDN \ub610\ub294 Nginx\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubb38\uc11c\uc5d0\uc11c CDN\uacfc nginx\uc5d0 \ub300\ud55c HowTo\ub97c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"basics/versatiles_server.ko/#_7","title":"\ud655\uc7a5\uc131 \ubc0f \uc131\ub2a5","text":"<p>Rust\ub85c \uc791\uc131\ub418\uc5b4 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc774 \uc801\uc73c\uba74\uc11c\ub3c4 \ub6f0\uc5b4\ub09c \uc131\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 <code>versatiles</code>\ub294 \ube60\ub978 \uc751\ub2f5 \uc2dc\uac04\uc744 \uc720\uc9c0\ud558\uba74\uc11c \ub9ce\uc740 \uc218\uc758 \ub3d9\uc2dc \uc694\uccad\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc18c\uaddc\ubaa8 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \ub300\uaddc\ubaa8 \ub370\uc774\ud130 \uc9d1\uc57d\uc801 \uc778\ud504\ub77c\uc5d0 \uc774\ub974\uae30\uae4c\uc9c0 \ub2e4\uc591\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc774\uc0c1\uc801\uc785\ub2c8\ub2e4.</p>"},{"location":"basics/versatiles_server.ko/#_8","title":"\uad6c\uc131 \uc635\uc158","text":"<p>\uad6c\uc131 \uc635\uc158\uc744 \uc124\uba85\ud574 \uc8fc\uc138\uc694</p>"},{"location":"basics/versatiles_server.ko/#api","title":"API \ubb38\uc11c","text":"<p>API\ub97c \uc124\uba85\ud574 \uc8fc\uc138\uc694</p>"},{"location":"basics/versatiles_server.ko/#_9","title":"\ud504\ub7f0\ud2b8\uc5d4\ub4dc \uc0ac\uc6a9\uc790 \uc9c0\uc815","text":"<p>\ud504\ub7f0\ud2b8\uc5d4\ub4dc \uc124\uba85</p>"},{"location":"basics/versatiles_server.ko/#_10","title":"\uc5c5\ub370\uc774\ud2b8 \ubc0f \ub9c8\uc774\uadf8\ub808\uc774\uc158","text":"<p>\uc5ec\uae30\uc5d0 \uc720\uc6a9\ud55c \ub0b4\uc6a9\uc744 \ucd94\uac00\ud574 \uc8fc\uc138\uc694</p>"},{"location":"basics/versatiles_server/","title":"How does the VersaTiles server work?","text":"<p>The VersaTiles server is built in Rust and provides excellent performance with low resource usage. In this article, we'll look at the main components and functionality of the VersaTiles server.</p>"},{"location":"basics/versatiles_server/#file-format","title":"File Format","text":"<p>One of the core concepts of VersaTiles is the unique .versatiles file format for storing map data. This format not only contains all the map tiles for the entire planet, but also has an index of all the map tiles with their respective byte offset and length within the file.</p> <p>The real magic of the .versatiles format is that it doesn't need to be stored locally. Instead, it can be accessed remotely using HTTP, for example. This is possible thanks to HTTP byte range requests, which allow the VersaTiles server to retrieve specific parts of the .versatiles file that contain the required map tile data. By using this feature, the VersaTiles server can efficiently serve map tiles without having the entire .versatiles file locally. This makes building scalable map infrastructures with VersaTiles much easier.</p> <p>The idea to develop a container that can be accessed via HTTP byte range request is based on COMTiles and PMTiles. However, since we have a slightly different focus and saw the need to deviate from the previous implementations if necessary, we decided to develop our own standard. However, we are very open to supporting COMTiles and PMTiles as alternatives in our pipeline.</p>"},{"location":"basics/versatiles_server/#installation-and-setup","title":"Installation and setup","text":"<p>First you need to install VersaTiles. See the instructions in the documentation: Installing VersaTiles.</p> <p>You will also need our prepared map tiles. You can find more information on this in the instructions: Downloading map tiles.</p>"},{"location":"basics/versatiles_server/#usage","title":"Usage","text":"<p>You can then start the server by using <code>versatiles</code> with the subcommand <code>server</code> and then simply adding the versatiles file as argument: <pre><code>versatiles server planet.versatiles\n</code></pre></p>"},{"location":"basics/versatiles_server/#multiple-sources","title":"Multiple sources","text":"<p>If you want to serve more than one source, you can easily add them: <pre><code>versatiles server planet.versatiles satellite_imagery.mbtiles my_overlay.tar\n</code></pre></p> <p>When the server is started, all sources and their URL are listed: <pre><code>   /tiles/planet/*                 &lt;-  /tiles/planet.versatiles\n   /tiles/satellite_imagery/*      &lt;-  /tiles/satellite_imagery.mbtiles\n   /tiles/my_overlay/*             &lt;-  /tiles/my_overlay.tar\n</code></pre></p> <p>Each source gets an URL based on the file name (without extension). If you want to use a different URL, you can use this special notation with square brackets: <pre><code>versatiles server \"[osm]planet.versatiles\" \"[satellite]satellite_imagery.mbtiles\" \"[heatmap]my_overlay.tar\"\n</code></pre></p> <p>Now the URLs look like this: <pre><code>   /tiles/osm/*                    &lt;-  /tiles/planet.versatiles\n   /tiles/satellite/*              &lt;-  /tiles/satellite_imagery.mbtiles\n   /tiles/heatmap/*                &lt;-  /tiles/my_overlay.tar\n</code></pre></p>"},{"location":"basics/versatiles_server/#optional-frontend","title":"Optional frontend","text":"<p>You can extend the VersaTiles server with an optional frontend. This frontend includes the latest version of MapLibre GL JS, map styles, fonts and symbols. You can download the frontend: <pre><code>wget \"https://github.com/versatiles-org/versatiles-frontend/releases/latest/download/frontend.br.tar\"\n</code></pre></p> <p>You can then add the frontend to the server by adding the tar file with a <code>-s</code> argument:</p> <pre><code>versatiles server -s frontend.br.tar planet.versatiles\n</code></pre>"},{"location":"basics/versatiles_server/#different-ipport","title":"Different IP/Port","text":"<p>Per default versatiles uses 127.0.0.1:8080. If you want to change IP/Port use the options: - <code>-i</code>/<code>--ip</code>: e.g. <code>-i 0.0.0.0</code> - <code>-p</code>/<code>--port</code>: e.g. <code>-p 3000</code></p>"},{"location":"basics/versatiles_server/#whats-not-included","title":"What's not included?","text":"<p>The VersaTiles server implements only core functionality to keep the project simple and easy to maintain. TLS certificates and caching are not included. But you can use a CDN or nginx for this. You can find HowTos on CDNs and nginx in the documentation.</p>"},{"location":"basics/versatiles_server/#scalability-and-performance","title":"Scalability and performance","text":"<p>Rust, the programming language used to develop the VersaTiles server, is known for its performance and low resource consumption. As a result, the VersaTiles server can handle a large number of concurrent requests while maintaining fast response times. This makes it ideal for applications ranging from small projects to large, data-intensive infrastructures.</p>"},{"location":"basics/versatiles_server/#configuration-options","title":"Configuration Options","text":"<p>Please describe configuration options</p>"},{"location":"basics/versatiles_server/#api-documentation","title":"API Documentation","text":"<p>Please describe the API</p>"},{"location":"basics/versatiles_server/#customise-the-front-end","title":"Customise the front-end","text":"<p>describe the frontend</p>"},{"location":"basics/versatiles_server/#updates-and-migration","title":"Updates and migration","text":"<p>Please add something useful here</p>"},{"location":"basics/web_maps/","title":"The World of Interactive Web Maps","text":""},{"location":"basics/web_maps/#introduction","title":"Introduction","text":"<p>Maps are not merely tools for navigation; they represent a convergence of technology, art, and data visualization. In today's digital age, web maps offer functionalities that extend from driving directions to intricate data visualization. This guide demystifies the intricate world of web maps and the technologies that make them possible.</p>"},{"location":"basics/web_maps/#map-projections","title":"Map Projections","text":"<p>Our planet is a sphere, but our screens are flat. This discrepancy requires the use of special map projections to squeeze our round planet onto a flat map. There are many hundreds of these projections.</p> <p>Some examples of map projections</p> <p>Among these many different projections, the Web Mercator projection is the most widely used for web maps.</p> <p>The Mercator projection exaggerates areas far from the equator.</p> <p>Unfortunately, it enlarges regions near the poles, such as Greenland and Antarctica, and ends at 85\u00b0 north and south, essentially cutting off the poles. On the other hand it does not distort details, and at all points north is always up, west is always to the left, and so on.</p> <p>The Web Mercator projection is not without its flaws, but it's a good compromise.</p>"},{"location":"basics/web_maps/#map-tiles","title":"Map Tiles","text":"<p>The Web Mercator projection projects the Earth onto a square, stored as an image file, usually at a resolution of 256x256 pixels.</p> <p>0/0/0.png</p> <p>This gives an overview of the earth, but as you zoom in, the image becomes blurred as the pixels get larger. This is why you want to use a web map frontend such as Leaflet, MapLibre or OpenLayers. They handle the user interaction with the web map and the loading of the data. When you zoom into the map, the frontend knows that the image has become too pixelated and replaces it with four images, effectively doubling the resolution.</p> 1/0/0.png 1/1/0.png 1/0/1.png 1/1/1.png <p>As you zoom in, the map tiles are replaced with their four sub tiles at each successive zoom level. The number of tiles grows exponentially, so the frontend only loads the tiles that are actually visible.</p>"},{"location":"basics/web_maps/#organizing-the-tiles","title":"Organizing the Tiles","text":"<p>The frontend handles the interaction and loading of the image tiles. So the frontend needs to know where to load the tiles from. To do this, the tiles are organised in folders using a specific URL pattern: <code>/\\$z/\\$x/\\$y.png</code>, where <code>\\$z</code> is the zoom level, and <code>\\$x</code> and <code>\\$y</code> are the column and row of the tile.</p> <p>Each zoom level quadruples the number of tiles, reaching staggering numbers. For example, zoom level 10 has over 1 million tiles (4^10), while zoom level 15 has over 1 billion (4^15).</p> <p>Storing all these images as files can be a huge challenge, as many file systems can't even handle that many entries. To manage these tiles, they are usually stored in a large single file container.</p> <p><code>.mbtiles</code> containers are widely used. These are actually SQLite databases. One of the tables inside the database stores all the tiles as table rows.</p> <p>Accessing a tile is done via SQL queries. To serve tiles under a URL like <code>/\\$z/\\$x/\\$y.png</code>, you need a map server that translates incoming HTTP requests with this URL pattern into SQL queries and returns the requested tile.</p> <p>Despite its disadvantages and added complexity, using a tile container like <code>.mbtiles</code> makes it much easier to manage millions of tiles.</p>"},{"location":"basics/web_maps/#vector-tiles","title":"Vector Tiles","text":"<p>Using image tiles has some disadvantages. For example, labels such as country or street names are permanently embedded. When you zoom in, these labels become larger and then disappear, to be replaced by smaller versions of the labels at the next zoom level. When you rotate the map, the labels also rotate and become difficult to read. It would be better if the labels could somehow float independently, always staying horizontal, at the same position and size.</p> <p>To achieve this and to overcome other problems with image tiles, vector tiles have been developed. They contain the raw vector data of each object, stored as points, lines and polygons, describing labels, roads and lakes. Each object stores additional properties such as \"type\" or \"name\". A separate file (tile.json) describes the structure and properties of the vector data. A second file (style.json) describes the visual appearance of this vector data. For example, what colour to use for water, forests or highways, how many pixels wide is a road or country boundary, etc.</p>"},{"location":"basics/web_maps/#the-complexity-and-advantages-of-vector-tiles","title":"The Complexity and Advantages of Vector Tiles","text":"<p>This system of encoding geodata into vector tiles and drawing them using a style definition is undoubtedly more complex than simply displaying images. However, this system allows much more flexibility and control over how maps are displayed, as you can style your map in any way you like in the frontend, including hiding unwanted layers such as labels. And because all drawing operations are performed on the graphics card (e.g. using WebGL), the speed is amazing, even when visualising 100,000 data points on the map.</p>"},{"location":"basics/web_maps/#conclusion","title":"Conclusion","text":"<p>Interactive web maps using vector tiles are a blend of several technologies, combining mathematics, art and code. Although the technology is much more complex, with VersaTiles we have tried to provide you with everything you need to set up your own map service in just a few minutes.</p>"},{"location":"compendium/","title":"Overview","text":"<ul> <li>Introduction into map servers and VersaTiles</li> <li>VersaTiles Layer Specification</li> <li>VersaTiles Container Specification</li> <li>VersaTiles Frontend Specification</li> <li>Show Cases using VersaTiles</li> <li>Tools using VersaTiles</li> <li>A wider perspective on VersaTiles</li> </ul>"},{"location":"compendium/introduction/","title":"Introduction","text":"<p>Since the early 1990s, the web has seen significant technological advances. New standards and tools have made it easier to publish text, articles, photos, videos and other forms of media. However, publishing maps remains particularly challenging.</p> <p>Several factors contribute to this challenge: 1. Geospatial data, satellite imagery and aerial photography, is often copyrighted, making it expensive and inaccessible for open use.  Some governments have not yet embraced the idea of open data and instead produce geospatial data mainly for commercial purposes. 1. Presenting map data on the web in an interactive format can be complex due to various factors such as data formats, geographic projections, server infrastructure requirements and the intricacies of front-end frameworks.</p> <p>Despite these challenges, the wealth of available data, standards and frameworks - many of which are open or freely available - provides a unique opportunity to build a web mapping infrastructure. However, the diversity of solutions makes it difficult to put the pieces together.</p> <p>VersaTiles aims to define and implement a standardised map infrastructure that provides a streamlined approach to integrating maps into web platforms.</p>"},{"location":"compendium/introduction/#who-needs-web-maps","title":"Who needs web maps?","text":"<p>Basically, every person and every object on the planet has a geo-coordinate. Even you have a geo-coordinate right now. No data is more useful than geodata, and no visualisation is more familiar than maps.</p> <ul> <li>Data Journalism: Journalists and media outlets often rely on maps to tell stories more effectively, providing readers with a visual context for complex issues such as war zones, political events or natural disasters.</li> <li>Research: Researchers studying environmental issues, climate change or other global or local phenomena need a tool to analyse and visualise their data.</li> <li>Emergency Response: In times of crisis, such as natural disasters or public health emergencies, organisations need maps to visualise affected areas and communicate local information to the public.</li> <li>Communities: There are so many great communities out there, such as citizen science, community-based bike sharing, community-supported agriculture and many more, that need a simple, cost-effective way to display location information.</li> </ul>"},{"location":"compendium/introduction/#what-are-slippy-maps","title":"What are Slippy Maps?","text":"<p>One of the most successful techniques for publishing interactive web maps is called 'slippy maps'. (Wikipedia, OSM Wiki)</p> <p>The first step is to project all geographic data onto a 2D plane using the Mercator projection. The Mercator projection has some limitations. For example, it cannot represent the north and south poles, and objects near the equator, such as Africa, appear smaller than those near the poles, such as Greenland. However, the Mercator projection has one major advantage: it always shows north as up, west as left, and does not distort small areas the size of a city. This makes it an excellent option for publishing a global map that can be easily zoomed in and out to accurately show any location.</p> <p>Once all the geographical data and/or images have been projected onto a world map, the challenge is to present this information on a web front-end without having to download large amounts of data. The solution provided by 'slippy maps' is to create a square world map at a very low resolution (zoom level 0). To increase the resolution at zoom level 1, the 'world map' is doubled in resolution and divided into four squares (northwest, northeast, southwest, southeast). Zoom level 2 consists of 16 tiles. The rule is that zoom level n has 4\u207f tiles.</p> <p>The tiles can be saved images (such as JPEG or PNG) with a resolution of 256x256 pixels. There is a standard way of naming these files, typically in the format: <code>{zoom_level}/{column}/{row}.jpg</code>.</p> <p>A frontend such as MapLibre, Leaflet or OpenLayers can then load the relevant tiles and display them in the correct position, creating the illusion of a continuous map that can be zoomed and dragged to any position.</p> <p>This approach works well for image tiles, such as satellite and aerial imagery. However, it has some disadvantages when displaying thematic maps, such as city maps. When zooming in, the map has to transition from one zoom level to another, causing labels to disappear and reappear. Image tiles do not provide a smooth zooming experience.</p> <p>So the concept of \"slippy maps\" has been improved by using vector data instead of images. Vector tiles can store points, paths, polygons and their properties - much like SVG. But because SVG is too cumbersome, Mapbox has developed a vector tiles standard that stores geographic data as compact protobufs (PBF). The frontend should read the geographic data and draw the map accordingly. One advantage is that the map style can be defined in the frontend, so that the colour or even the language of the map can be adjusted. Rendering large amounts of vector data can be computationally expensive, so vector tiles are typically rendered on the GPU using libraries such as WebGL, OpenGL or Vulcan.</p>"},{"location":"compendium/introduction/#why-is-there-no-simple-solution","title":"Why is there no simple solution?","text":"<p>Generating, serving, and visualising map tiles can be a complex process due to the variety of tile formats, hosting options, storage and generation methods, serving and display techniques, map data styling approaches, and data source combinations. In addition, front-ends must render vector data, satellite imagery, hillshading, data visualisation layers, and interactive front-end elements.</p> <p>Commercial vendors such as Mapbox address these challenges by offering a comprehensive software suite. However, the solution is expensive, leads to vendor lock-in and raises privacy concerns.</p> <p>A free and open source system would be ideal. Although open source alternatives exist for each problem, integrating them into a single infrastructure can be challenging. It is not feasible to develop a single software solution that solves all the problems at once and remains flexible enough for different use cases.</p>"},{"location":"compendium/introduction/#how-does-versatiles-solve-the-problem","title":"How does VersaTiles solve the problem?","text":"<p>To find a solution to such a wide range of problems, we looked to the development of the Internet itself for inspiration. Instead of creating a single piece of software to run the entire Internet, the OSI model was developed. This reference model segments the problem into manageable pieces and defines specifications for each component. This segmentation ensures that individual software solutions can be developed independently while remaining compatible with others that adhere to OSI standards.</p> <p>Using the OSI model as a blueprint, we broke down the complex problem into smaller, more manageable pieces. This allowed us to standardise each segment and its connections, ensuring cohesion across all components.</p> <p>The 'big problem' was conceptualised as a pipeline that generates, serves and displays map data. We divided the pipeline into four sub-segments and developed specifications to define the interfaces between them. We also provide free reference implementations for each segment, as well as a reference pipeline that anyone can use for free.</p> <p>This allows anyone to use our map tile service for free, or to use parts or the whole pipeline in their own infrastructure. VersaTiles allows you to deviate from the reference pipeline at any point and still use all the other pipeline components. This ensures that you have a stable platform to use and build on, but also gives you the flexibility and freedom to experiment.</p>"},{"location":"compendium/show_cases/","title":"Show cases","text":"<ul> <li>https://www.swr.de/swraktuell/diesel-und-benzinpreise-aktuell-so-tanken-sie-heute-clever-100.html</li> <li>https://www.swr.de/swraktuell/rheinland-pfalz/waldbraende-aktuell-orte-karte-rlp-102.html</li> <li>https://notfallrettung.swr.de/</li> <li>https://swrdata.github.io/zensus-gitter-test/</li> <li>https://taz.de/Deutsche-Vorschriften-fuer-Windenergie/!5901969/</li> <li>https://interaktiv.morgenpost.de/cannabis-legalisierung-kiffen-karte/</li> <li>https://www.ndr.de/nachrichten/hamburg/Neue-Studie-Hamburg-bleibt-Deutschlands-Stau-Hochburg,stau1650.html</li> <li>https://www.ndr.de/nachrichten/hamburg/Zensus-2022-Hamburg-ist-Bundesland-mit-hoechsten-Mieten,zensus340.html</li> <li>https://www.ndr.de/nachrichten/ndrdata/Zensus-Mietpreise-im-Norden-im-Ueberblick,zensus308.html</li> </ul>"},{"location":"compendium/specification_container/","title":"VersaTiles Container Format Specification v2.0","text":""},{"location":"compendium/specification_container/#1-preamble","title":"1. Preamble","text":"<p>This document defines the VersaTiles Container Format v2.0, which describes the structure and encoding mechanisms for efficiently storing large numbers of map tiles.</p>"},{"location":"compendium/specification_container/#2-general-guidelines","title":"2. General Guidelines","text":"<ul> <li>Byte order: All numeric values are encoded in big-endian byte order.</li> <li>Tile organisation: Tiles are organised according to the XYZ scheme, with the origin (x=0, y=0) at the top left (northwest) corner.</li> </ul>"},{"location":"compendium/specification_container/#3-file-structure","title":"3. File Structure","text":"<p>The VersaTiles container format consists of four main components:</p> <ol> <li>File Header: Introduces the container file, details its global properties, and indicates the locations of the Metadata and Block Index.</li> <li>Metadata: Provides detailed information about the tileset, including attribution and layer definitions.</li> <li>Blocks: Aggregates tiles into larger units (Blocks) for efficient storage and access, each containing Tile Blobs and Tile Index.</li> <li>Block Index: Acts as a parent directory for all blocks within the file.</li> </ol> File Format"},{"location":"compendium/specification_container/#31-file-header","title":"3.1. File Header","text":"<ul> <li>Length: 66 bytes.</li> <li>Position: At the beginning of the file.</li> <li>Purpose: Outlines essential file properties and indicates subsequent section locations.</li> <li>All offsets are relative to the beginning of the file.</li> </ul> Offset Length Type Description 0 14 string File identifier (<code>\"versatiles_v02\"</code>) 14 1 u8 <code>tile_format</code> value 15 1 u8 <code>precompression</code> value 16 1 u8 minimum zoom level 17 1 u8 maximum zoom level 18 4 i32 bbox min x (10\u2077 \u00d7 lon) 22 4 i32 bbox min y (10\u2077 \u00d7 lat) 26 4 i32 bbox max x (10\u2077 \u00d7 lon) 30 4 i32 bbox max y (10\u2077 \u00d7 lat) 34 8 u64 offset of Metadata 42 8 u64 length of Metadata 50 8 u64 offset of Block Index 58 8 u64 length of Block Index"},{"location":"compendium/specification_container/#311-value-tile_format","title":"3.1.1. Value <code>tile_format</code>","text":"Value hex Value dec Type Mime <code>0x00</code> <code>0</code> bin application/octet-stream <code>0x10</code> <code>16</code> png image/png <code>0x11</code> <code>17</code> jpg image/jpeg <code>0x12</code> <code>18</code> webp image/webp <code>0x13</code> <code>19</code> avif image/avif <code>0x14</code> <code>20</code> svg image/svg+xml <code>0x20</code> <code>32</code> pbf application/x-protobuf <code>0x21</code> <code>33</code> geojson application/geo+json <code>0x22</code> <code>34</code> topojson application/topo+json <code>0x23</code> <code>35</code> json application/json"},{"location":"compendium/specification_container/#312-value-precompression","title":"3.1.2. Value <code>precompression</code>","text":"<p>Metadata and all Tile Blobs are pre-compressed with:</p> Value Method <code>0</code> Uncompressed <code>1</code> gzip <code>2</code> Brotli"},{"location":"compendium/specification_container/#32-metadata-chunk","title":"3.2. Metadata Chunk","text":"<ul> <li>Content: Encapsulates <code>tiles.json</code>, detailing tileset metadata.</li> <li>Encoding: UTF-8.</li> <li>Compression: Defined by the <code>precompression</code> flag in the File Header.</li> <li>Note: The absence of Metadata is indicated by zero offsets and lengths in the File Header.</li> </ul>"},{"location":"compendium/specification_container/#33-blocks","title":"3.3. Blocks","text":"<ul> <li>Structure: Blocks act as aggregators for up to 256\u00d7256 tiles.</li> <li>Zoom Levels: Individual Blocks can span entire zoom levels (0-8). Higher zoom levels (&gt;8) may require multiple Blocks.</li> <li>Maximum number of Blocks per zoom level: <code>pow(4, max(0, level - 8))</code>.</li> </ul> Blocks per level <ul> <li>Each Block contains concatenated Tile Blobs and ends with a Tile Index.</li> <li>Neither the Tile Blobs in a Block nor the Blocks in the file need to follow any particular order.</li> </ul>"},{"location":"compendium/specification_container/#331-tile-blobs","title":"3.3.1. Tile Blobs","text":"<ul> <li>Tile Blobs are concatenated binary data, each containing one tile. All tiles have the same format and are pre-compressed.</li> <li>Format: Each Tile Blob has the same file format, determined by the <code>tile_format</code> code in the File Header.</li> <li>Compression: Each Tile Blob is compressed according to the <code>precompression</code> flag in the File Header.</li> </ul>"},{"location":"compendium/specification_container/#332-tile-index","title":"3.3.2. Tile Index","text":"<ul> <li>Compression: Brotli.</li> <li>Purpose: Maps the coordinates of tiles within a block to their respective binary position and length.</li> <li>Tiles are ordered horizontally, then vertically</li> <li><code>index = (row - row_min) * (col_max - col_min + 1) + (col - col_min)</code></li> <li>(<code>col_min</code>, <code>row_min</code>, <code>col_max</code>, <code>row_max</code> are specified in Block Index)</li> <li>Identical Tile Blobs can be stored once and referenced multiple times to save storage space.</li> <li>If a tile does not exist, the length of the Tile Blob is <code>0</code>.</li> <li>The offsets of Tile Blobs are relative to the beginning of the Block. So the offset of the first Tile Blob should always be <code>0</code>.</li> </ul> Offset Length Type Description 12*i 8 u64 offset of Tile Blob in Block 12*i+8 4 u32 length of Tile Blob index of Tile Blobs"},{"location":"compendium/specification_container/#34-block-index","title":"3.4. Block Index","text":"<ul> <li>Compression: Brotli.</li> <li>Function: Provides a directory for locating Blocks within the container file.</li> <li>Empty Blocks are not saved.</li> <li>Each 33-byte entry within the Block Index is structured as follows:</li> </ul> Offset Length Type Description 0 + 33*i 1 u8 <code>level</code> 1 + 33*i 4 u32 <code>column</code>/256 5 + 33*i 4 u32 <code>row</code>/256 9 + 33*i 1 u8 <code>col_min</code> (0..255) 10 + 33*i 1 u8 <code>row_min</code> (0..255) 11 + 33*i 1 u8 <code>col_max</code> (0..255) 12 + 33*i 1 u8 <code>row_max</code> (0..255) 13 + 33*i 8 u64 offset of Block in file 21 + 33*i 8 u64 length of Tile Blobs 29 + 33*i 4 u32 length of Tile Index <ul> <li>Since a Block consists only of Tile Blobs appended by a Tile Index, the length of Block must be the sum of the lengths of the Tile Blobs and the Tile Index.</li> <li>Note: To efficiently find the Block containing the tile you are looking for, use a data structure such as a \"map\", \"dictionary\" or \"associative array\" and fill it with the data from the Block Index.</li> </ul>"},{"location":"compendium/specification_container/#4-glossary","title":"4. Glossary","text":"<ul> <li>Blob: A chunk of binary data. Object storage on Wikipedia</li> <li>Block: A composite unit containing up to 256\u00d7256 tiles.</li> <li>Brotli: A compression algorithm known for its efficiency and performance. It provides better compression than gzip. Brotli on Wikipedia</li> <li>Tile: A square geographic area at a given zoom level containing map information as an image or as vector data.</li> </ul>"},{"location":"compendium/specification_frontend/","title":"VersaTiles Frontend Specification","text":"<p>Map servers like Martin, mbtileserver, t-rex, TileServer GL and others have different ways of organising their files and folders in the web frontend. The same assets can be served at different URLs depending on the server software.</p> <p>This can be problematic and confusing. For example, it is unclear whether a <code>/fonts/</code> folder should contain web fonts (<code>*.woff</code>) or glyphs for Maplibre GL JS (<code>*.pbf</code>). Or if a <code>/styles/</code> folder should contain style sheets (<code>*.css</code>) or map style definitions (<code>style.json</code>).</p> <p>Based on best practices, the VersaTiles Frontend Specification defines a recommended folder structure and file formats for serving static and dynamic files to avoid confusion and incompatibilities when developing a web frontend.</p>"},{"location":"compendium/specification_frontend/#folder-structure","title":"Folder Structure","text":"<pre>\n\u251c\u2500\u2500 \ud83d\udcc2 assets/\n\u2502   \u251c\u2500\u2500 \ud83d\udcc2 glyphs/\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc2 {font_id}/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc4 {start}-{end}.pbf\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc4 font_families.json\n\u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc4 index.json\n\u2502   \u251c\u2500\u2500 \ud83d\udcc2 lib/\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc2 maplibre-gl/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc4 maplibre-gl.css\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc4 maplibre-gl.js\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc2 versatiles-style/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc4 versatiles-style.js\n\u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc2 .../\n\u2502   \u251c\u2500\u2500 \ud83d\udcc2 sprites/\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc2 {sprite_id}/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc4 sprite.json\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc4 sprite.png\n\u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc4 index.json\n\u2502   \u251c\u2500\u2500 \ud83d\udcc2 styles/\n\u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc2 {style_id}/\n\u2502   \u2502       \u2514\u2500\u2500 \ud83d\udcc4 style.json\n\u2502   \u2514\u2500\u2500 \ud83d\udcc2 .../\n\u251c\u2500\u2500 \ud83d\udcc2 tiles/\n\u2502   \u251c\u2500\u2500 \ud83d\udcc2 {tileset_id}/\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc2 {z}/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc2 {x}/\n\u2502   \u2502   \u2502       \u2514\u2500\u2500 \ud83d\udcc4 {y}{.ext}\n\u2502   \u2502   \u2514\u2500\u2500 \ud83d\udcc4 tiles.json\n\u2502   \u2514\u2500\u2500 \ud83d\udcc4 index.json\n\u2514\u2500\u2500 \ud83d\udcc4 index.html\n</pre>"},{"location":"compendium/specification_frontend/#folder-assets","title":"Folder: <code>/assets/</code>","text":"<p>The <code>/assets/</code> folder is used for static assets such as JavaScript libraries, CSS files, map styles, images, icons, fonts and other related resources.</p>"},{"location":"compendium/specification_frontend/#folder-assetsglyphs","title":"Folder: <code>/assets/glyphs/</code>","text":"<ul> <li>All map glyphs should be stored in the <code>/assets/glyphs/</code> directory.</li> <li>Glyphs should be served as <code>/assets/glyphs/{font_id}/{start}-{end}.pbf</code>. For example: <code>/assets/glyphs/open_sans_bold_italic/768-1023.pbf</code>.</li> <li>Font IDs (<code>{font_id}</code>) should be OS/UNIX/URL safe, using only lower case letters, digits and underscores. For example, instead of naming a folder <code>Arial%20Unicode%20MS%20Regular</code>, it should be named <code>arial_unicode_ms_regular</code>.</li> <li>You should also include a list of all available fonts in the following files</li> <li><code>/assets/glyphs/index.json</code></li> <li><code>/assets/glyphs/font_families.json</code></li> <li>The MapLibre Style Spec has more information about glyphs.</li> </ul>"},{"location":"compendium/specification_frontend/#file-assetsglyphsindexjson","title":"File: <code>/assets/glyphs/index.json</code>","text":"<p>The <code>/assets/glyphs/index.json</code> file should contain a JSON array listing all available <code>{font_id}</code>s. These <code>{font_id}</code>s correspond to the folder names within <code>/assets/glyphs/</code>, with each folder containing the glyphs for that typeface. This index file can be used by map design tools to get a list of all fonts.</p> <p>Example:</p> <pre><code>[\n  \"fira_sans_bold\",\n  \"fira_sans_bold_italic\",\n  \"fira_sans_cond_bold\",\n  \"fira_sans_cond_bold_italic\",\n  \"fira_sans_cond_italic\",\n  \"fira_sans_cond_regular\",\n  \"fira_sans_italic\",\n  \"fira_sans_regular\"\n]\n</code></pre>"},{"location":"compendium/specification_frontend/#file-assetsglyphsfont_familiesjson","title":"File: <code>/assets/glyphs/font_families.json</code>","text":"<p>The <code>/assets/glyphs/font_families.json</code> file should contain a JSON array that defines all the font families along with their respective faces. This allows map design tools to know which faces are available for each font family. The <code>id</code> of each <code>FontFace</code> object must match the corresponding <code>{font_id}</code> in <code>/assets/glyphs/</code>.</p> <p>[!NOTE] The structure of <code>font_families.json</code> is based on the concepts of Font Families and Faces in CSS 4. The <code>style</code>, <code>weight</code> and <code>width</code> properties and their values are based on the CSS 4 <code>font-style</code>, <code>font-weight</code> and <code>font-width</code> properties.</p> <p>The TypeScript definition for this JSON is as follows:</p> <pre><code>type FontFamilies = FontFamily[];\n\ninterface FontFamily {\n  name: string;\n  faces: FontFace[];\n}\n\ninterface FontFace {\n  id: string;\n  style: \"normal\" | \"italic\" | \"oblique\";\n  weight: 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\n  width:\n    \"ultra-condensed\" | \"extra-condensed\" | \"condensed\" | \"semi-condensed\" |\n    \"normal\" |\n    \"semi-expanded\" | \"expanded\" | \"extra-expanded\" | \"ultra-expanded\"\n}\n</code></pre> <p>Example:</p> <pre><code>[\n  {\n    \"name\": \"Fira Sans\",\n    \"faces\": [\n      {\"id\":\"fira_sans_bold_italic\",      \"style\":\"italic\", \"weight\":700, \"width\":\"normal\"   },\n      {\"id\":\"fira_sans_bold\",             \"style\":\"normal\", \"weight\":700, \"width\":\"normal\"   },\n      {\"id\":\"fira_sans_italic\",           \"style\":\"italic\", \"weight\":400, \"width\":\"normal\"   },\n      {\"id\":\"fira_sans_regular\",          \"style\":\"normal\", \"weight\":400, \"width\":\"normal\"   },\n      {\"id\":\"fira_sans_cond_bold_italic\", \"style\":\"italic\", \"weight\":700, \"width\":\"condensed\"},\n      {\"id\":\"fira_sans_cond_bold\",        \"style\":\"normal\", \"weight\":700, \"width\":\"condensed\"},\n      {\"id\":\"fira_sans_cond_italic\",      \"style\":\"italic\", \"weight\":400, \"width\":\"condensed\"},\n      {\"id\":\"fira_sans_cond_regular\",     \"style\":\"normal\", \"weight\":400, \"width\":\"condensed\"}\n    ]\n  }\n]\n</code></pre> <p>Based on this example, the following glyphs must be present:</p> <pre><code>/assets/glyphs/fira_sans_bold_italic/{range}.pbf\n/assets/glyphs/fira_sans_bold/{range}.pbf\n/assets/glyphs/fira_sans_cond_bold_italic/{range}.pbf\n/assets/glyphs/fira_sans_cond_bold/{range}.pbf\n/assets/glyphs/fira_sans_cond_italic/{range}.pbf\n/assets/glyphs/fira_sans_cond_regular/{range}.pbf\n/assets/glyphs/fira_sans_italic/{range}.pbf\n/assets/glyphs/fira_sans_regular/{range}.pbf\n</code></pre>"},{"location":"compendium/specification_frontend/#folder-assetssprites","title":"Folder: <code>/assets/sprites/</code>","text":"<ul> <li>All map sprites that are used by multiple map styles should be stored in the <code>/assets/sprites/</code> directory.</li> <li>Each sprite should be in its own subdirectory: <code>/assets/sprites/{sprite_id}/</code>.</li> <li>The metadata for each sprite is defined in JSON format according to the sprite source specification and should be served as <code>/assets/sprites/{sprite_id}/sprite.json</code>.</li> <li>Sprite IDs (<code>{sprite_id}</code>) should be OS/UNIX/URL safe, using only lower case letters, numbers and underscores.</li> <li>You should also provide a list of all available sprites in the <code>/assets/sprites/index.json</code> file.</li> <li>See the MapLibre Style Spec for more detailed information on sprites.</li> </ul>"},{"location":"compendium/specification_frontend/#folder-assetsstyles","title":"Folder: <code>/assets/styles/</code>","text":"<ul> <li>All prepared map styles should be stored in the <code>/assets/styles/</code> directory.</li> <li>Each style should be in its own subdirectory: <code>/assets/styles/{style_id}/</code>.</li> <li>The styles are defined in JSON format according to the MapLibre style specification and should be served as <code>/assets/styles/{style_id}/style.json</code>.</li> <li>Additional variants of the style can also be saved in the folder, e.g. localised versions such as <code>de.json</code>, <code>en.json</code>, <code>nolabel.json</code> etc.</li> <li>Style IDs (<code>{style_id}</code>) should be OS/UNIX/URL safe, using only lower case letters, numbers and underscores.</li> </ul>"},{"location":"compendium/specification_frontend/#file-assetsspritesindexjson","title":"File: <code>/assets/sprites/index.json</code>","text":"<p>This file should contain a JSON array listing all available <code>{sprite_id}</code>s. These <code>{sprite_id}</code>s correspond to the folder names within <code>/assets/sprites/</code>. This index file can be used by map design tools to get a list of all sprites.</p> <p>Example:</p> <pre><code>[\n  \"versatiles\",\n  \"markers\",\n  \"traffic_signs\",\n  \"animals\"\n]\n</code></pre>"},{"location":"compendium/specification_frontend/#folder-tiles","title":"Folder: <code>/tiles/</code>","text":"<p>The <code>/tiles/</code> folder is used to provide map tiles and associated metadata (in TileJSON format). All files are dynamically generated by the map server.</p>"},{"location":"compendium/specification_frontend/#files-tilestileset_idzxyext","title":"Files: <code>/tiles/{tileset_id}/{z}/{x}/{y}{.ext}</code>","text":"<ul> <li><code>/tiles/{tileset_id}/</code>: Each tile set is stored in its own subdirectory identified by <code>{tileset_id}</code>.</li> <li><code>/tiles/{tileset_id}/{z}/{x}/{y}</code>: The tiles themselves are stored in directories based on zoom level (<code>{z}</code>) and within that further divided by x (column) and y (row) coordinates (<code>{x}</code>, <code>{y}</code>).</li> <li>File extensions <code>{.ext}</code> are optional. If set, they should reflect the correct data type of the map tiles, such as <code>.png</code>, <code>.jpeg</code> or <code>.pbf</code>.</li> </ul> <p>For a tile set with the ID <code>city_map</code>, the folder structure for a tile at zoom level 10, coordinates (x: 512, y: 384) would be <code>/tiles/city_map/10/512/384</code></p>"},{"location":"compendium/specification_frontend/#file-tilesindexjson","title":"File: <code>/tiles/index.json</code>","text":"<p>This file contains an array of all available <code>{tileset_id}</code>. For each <code>{tileset_id}</code> there must be <code>/tiles/{tileset_id}/tiles.json</code>. This index file can be used by map design tools to get a list of all available tile sets.</p> <p>Example:</p> <pre><code>[\n  \"osm\",\n  \"elevation\",\n  \"hillshade-raster\",\n  \"hillshade-vector\",\n  \"landcover-vector\"\n]\n</code></pre>"},{"location":"compendium/specification_reference_model/","title":"VersaTiles Reference Model","text":"<p>Our reference pipeline consists of four segments:</p> <pre><code>flowchart LR\nGenerator --&gt; Server --&gt; Network --&gt; Frontend\n</code></pre> <ol> <li>Generator: Creates map tiles from a data source, such as vector tiles from OpenStreetMap data or image tiles from satellite or aerial imagery.</li> <li>Server: Manages the storage and distribution of map tiles.</li> <li>Network: Handles all network-related issues, including TLS certificates, load balancing, CORS and caching.</li> <li>Frontend: Provides the user interface for interactive maps.</li> </ol> <p>[!WARNING] VersaTiles is still under development. Please note that not all pipeline specifications are final and we may encounter unforeseen use cases, problems or features that require minor adjustments. However, the majority of the pipeline is stable.</p>"},{"location":"compendium/specification_reference_model/#layer-generator","title":"Layer: Generator","text":"<p>The generator layer creates map tiles, which can be either image or vector tiles.</p> <p>We have chosen not to use the OpenMapTiles schema for vector tiles because we feel it does not embody the openness we are aiming for. In particular, the requirement to include links to the MapTiler website or to pay licensing fees seems more like a marketing strategy than a commitment to open standards. Instead, we have chosen to use the free Shortbread schema originally developed by GeoFabrik. We acknowledge that this choice has implications, such as the incompatibility of map styles designed for OpenMapTiles vs. Shortbread. </p> <p>But if we're going to start from scratch, let's get it right from the beginning.</p> <p>While users are free to deviate from our recommendations and use the OpenMapTiles schema, we will continue to focus our efforts on the Shortbread schema.</p> <p>Users can skip the tile generation process altogether and download our pre-built map tiles for the entire planet directly from download.versatiles.org.</p>"},{"location":"compendium/specification_reference_model/#requirementsrecommendations","title":"Requirements/Recommendations","text":"<ul> <li>Tiles SHOULD be packed in a *.versatiles container.</li> <li>Vector tiles SHOULD follow the Shortbread Schema.</li> <li>Containers SHOULD include detailed metadata conforming to TileJSON 3.0.0, specifically:</li> <li><code>attribution</code> detailing the copyright of the source data.</li> <li><code>vector_layers</code> describing the vector tile layers and their properties.</li> <li>You SHOULD use optimal compression techniques to efficiently reduce tile size without compromising data integrity. Recommended methods include:</li> <li>Use Brotli compression for vector tiles.</li> <li>Use WebP format for raster tiles.</li> <li>The filename of the container SHOULD follow the format <code>&lt;content&gt;[.&lt;schema&gt;][.&lt;coverage&gt;][.&lt;date&gt;].versatiles</code>, where:</li> <li><code>&lt;content&gt;</code> describes the content, e.g: <code>osm</code>, <code>hillshade</code> or <code>satellite</code>.</li> <li><code>&lt;schema&gt;</code> (optional) e.g.: <code>shortbread</code> or <code>openmaptiles</code>.</li> <li><code>&lt;coverage&gt;</code> (optional) specifies the geographical coverage, if not planet wide, e.g: <code>europe</code> or <code>kyiv</code>.</li> <li><code>&lt;date&gt;</code> (optional) is a basic ISO date (YYYYMMDD), e.g: <code>20151021</code>.</li> </ul>"},{"location":"compendium/specification_reference_model/#status","title":"Status","text":"<ul> <li>[x] Implement the generator using Tilemaker (repo)</li> <li>[x] Use the Shortbread schema (repo)</li> <li>[ ] Add more languages besides local, english and german (issue)</li> <li>[x] generate <code>.versatiles</code> instead of <code>.mbtiles</code> (repo)</li> <li>[x] merge the converter into the generator and use docker (issue)</li> <li>[x] use Tilemaker 3.0.0 to reduce memory usage (issue)</li> <li>[x] migrate to a cheaper cloud provider (like Hetzner)</li> <li>[ ] Reduce the size of vector tiles (issue)</li> <li>[ ] improve lower zoom levels (issue), especially merge and simplify polygons where possible</li> <li>[x] generate hill shading (issue)</li> <li>[ ] Generate satellite imagery (using Landsat/SENTINEL, aerial imagery from national open data platforms and open MAXAR imagery)</li> </ul>"},{"location":"compendium/specification_reference_model/#interface-container","title":"Interface: Container","text":"<p>A frequently asked question is why we decided to develop our own container format. The reasons are many:</p> <p>A critical need within the OSM community is for map tile servers to automatically and quickly reflect updates to OSM data. While this real-time updating is critical for some OSM contributors, it is not as important for a wider audience. News organisations, data journalists, NGOs and many front-end developers often only need a basic map background that may be a few months old. The need to monitor real-time changes is not a priority for these users. However, the insistence on up-to-the-minute updates adds significant complexity and resource requirements, requiring all OSM objects to be stored and indexed in a PostgreSQL/PostGIS database, and all changed tiles to be updated immediately. This requirement makes it difficult to develop simple, low-cost solutions. Instead, we will focus on pre-generated tiles stored in a file container.</p> <p>The most commonly used container format is MBTiles, which is essentially a SQLite database containing a row for each tile, with the tile data stored as gzipped blobs. Despite its flexibility, MBTiles has several drawbacks: 1. It requires local or mounted server storage and cannot be hosted on remote cloud storage. 2. SQLite becomes a necessary dependency. (like libsqlite3-dev) 3. Processing many tiles is inefficient given SQLite's limited throughput.</p> <p>In response, some have turned to cloud-optimised map tile container formats such as COMTiles or PMTiles, which consolidate tiles into a single file with an appended index for byte-range lookups of each tile. These formats are tailored to specific use cases; for example, PMTiles is designed for storage on public cloud storage such as AWS S3 and can be accessed serverlessly via JavaScript using HTTP range requests. While the concept of serverless tile hosting is innovative, it has notable drawbacks such as slow initialisation, uncompressed tile data and caching challenges. Our goal is to remain independent of container formats that are application specific or prone to divergent future development paths.</p> <p>Accordingly, we have taken the lessons learned from COMTiles and PMTiles to create a uniquely simple container format, which is described here: VersaTiles Container Specification.</p> <p>A unique feature of our format is the ability to perform fast spatial queries remotely. Users who only need a specific region, such as a continent, country or city, do not need to download the entire planet. Instead, they can use our VersaTiles tool to filter and convert the remote container at download.versatiles.org and download only an extract, for example: <pre><code>versatiles convert --bbox \"5,45,10,48\" https://download.versatiles.org/osm.versatiles switzerland.versatiles\n</code></pre> HTTP requests for successive tiles are combined to download thousands of tiles at once, resulting in very high performance. This allows parts of the planet to be extracted with no overhead. See the documentation on partial download for more information.</p>"},{"location":"compendium/specification_reference_model/#requirementsrecommendations_1","title":"Requirements/Recommendations","text":"<ul> <li>A container MUST conform to the VersaTiles Container Specification: VersaTiles Spec.</li> <li>Tile data SHOULD use optimal compression.</li> </ul>"},{"location":"compendium/specification_reference_model/#status_1","title":"Status","text":"<ul> <li>[x] Include metadata</li> <li>[x] Support all tile formats (image and vector)</li> <li>[x] Support all compression methods (gzip, brotli)</li> <li>[x] Enable bbox downloads</li> <li>[x] Finish the [specification] (https://github.com/versatiles-org/versatiles-spec/blob/main/v02/readme.md)</li> </ul>"},{"location":"compendium/specification_reference_model/#layer-server","title":"Layer: Server","text":"<p>The server provides map tiles and static files via HTTP. These static files can include styles, sprites, fonts, JavaScript libraries and more.</p>"},{"location":"compendium/specification_reference_model/#requirementsrecommendations_2","title":"Requirements/Recommendations","text":"<ul> <li>It MUST recognise and process VersaTiles containers.</li> <li>It SHOULD handle HTTP headers in particular:</li> <li><code>Content-Type</code> must accurately represent the MIME type.</li> <li><code>Accept-Encoding</code> and <code>Content-Encoding</code> for data compression; recompress data if necessary.</li> <li><code>Cache-Control</code> should be used to manage caching strategies for proxies, CDNs and browsers. Should include <code>no-transform</code>.</li> <li><code>Vary</code> should be set to <code>Accept-Encoding</code>.</li> <li>Implement CORS headers such as <code>Access-Control-Allow-Origin</code> if required.</li> <li>The server should know its public URL for referencing resources.</li> <li>Organised tile and metadata access through a structured folder hierarchy is recommended:</li> <li><code>/tiles/</code>: The primary directory for retrieving tiles.<ul> <li><code>/tiles/index.json</code>: An index of available tile sources.</li> <li><code>/tiles/{name}/{z}/{x}/{y}</code>: Standardised endpoints for accessing tiles.</li> <li><code>/tiles/{name}/tiles.json</code>: A valid TileJSON 3.0.0.</li> </ul> </li> <li><code>/assets/</code>: Houses additional resources such as styles, fonts, sprites and MapLibre GL JS files.</li> <li>See VersaTiles Frontend Specifications for more information.</li> <li>SHOULD be configured via <code>config.yaml</code> for a customised server setup, including domain setup, IP/port listening preferences, operation modes (development vs. production), tile source specification and static content management:</li> </ul> <pre><code>server:\n  host: '127.0.0.1'               # Listen on all network interfaces. Default: 0.0.0.0\n  port: 3000                      # Port number for the server. Default: 8080\n  domain: 'https://example.org'   # Publicly accessible URL of the server\n\n# Performance settings: Use minimal recompression for development\nfast: true                        # Set to false in production for full compression. Default: false\n\n# Configuration for tile sources\ntile_sources:\n  - name: 'osm'\n    source: './osm.versatiles'    # Local source for OpenStreetMap tiles\n  - name: 'landsat'\n    source: 'https://example.org/landsat.versatiles'   # Remote source for Landsat tiles\n\n# Optional configuration for serving static content\nstatic_content:\n  - source: './styles'\n    prefix: 'assets/styles'  # URL path prefix for styles; default prefix is \"/\"\n  - source: './frontend.tar'\n\ncors:\n  # Default policy to allow or block CORS requests if they don't match any specific rules\n  default_policy: 'block'  # Options: 'allow', 'block'\n\n  # List of URL patterns to explicitly allow for CORS requests\n  allow_patterns:\n    - '^https?://trusteddomain\\.com'\n    - '^https?://*.example\\.com'\n\n  # List of URL patterns to explicitly block for CORS requests\n  block_patterns:\n    - '^https?://untrusteddomain\\.com'\n    - '^https?://*.malicious\\.com'\n\nlogging:\n  level: 'info'                   # Options: 'debug', 'info', 'warning', 'error'\n  path: '/var/log/myserver.log'   # File path for log output\n</code></pre>"},{"location":"compendium/specification_reference_model/#rust-implementation","title":"Rust Implementation","text":"<p>We provide a high performance Rust implementation, available as both a CLI application and a Rust library (crate).</p> <p>Supported platforms include x86 and ARM (64 Bit) across: - [x] Linux - [x] MacOS - [x] Windows</p> <p>In addition to the source code, which can be compiled using cargo, we provide: - [x] Binary releases via GitHub - [x] Installation scripts for Linux/MacOS and Windows - [x] Homebrew - [ ] NixOS - [ ] Snap ? - [ ] Flatpak ?</p> <p>Our Docker images (Repository) use Debian, Alpine and Scratch environments. They include variations with and without all static frontend files.</p> <p>Future improvements will focus on: - [ ] Proper CORS handling - [ ] Full <code>config.yaml</code> support - [x] Generation of tile size statistics - [ ] Vector tile content debugging - [ ] Implementing \"diff\" and \"patch\" commands for tile updates - [ ] Implement a tile processing pipeline (alpha version already released. Run <code>versatiles help pipeline</code>) - [ ] Develop an \"overlay\" command to overlay image tiles - [ ] Improve the \"overlay\" command by implementing a multi-scale approach to seamlessly overlay image tiles (see also gradient-domain image processing)</p>"},{"location":"compendium/specification_reference_model/#nodejs-implementations","title":"NodeJS Implementations","text":"<p>Our NodeJS implementation includes - [x] An NPM library - [x] A basic server - [ ] Full <code>config.yaml</code> support - [ ] Comprehensive CORS management</p> <p>A specific solution for newsrooms using Google Cloud includes a NodeJS Cloud Run service that serves static files from a bucket via the CDN, managing all HTTP headers, MIME types, caching and optimal compression. An outstanding feature is the ability to serve tiles directly from a `*.versatiles' file, including a preview mode: - [x] VersaTiles - Google Cloud Run server simplifies the integration of map data into data visualisations for editorial departments.</p>"},{"location":"compendium/specification_reference_model/#status_2","title":"Status","text":"<p>In the future we plan to: - [ ] Validate VersaTiles on Raspberry Pi - [ ] Explore a tile server on ESP32 that demonstrates the simplicity and efficiency of VersaTiles. - [ ] Standardise the server configuration and API for seamless transitions between server implementations</p>"},{"location":"compendium/specification_reference_model/#interface-privateinternal-network","title":"Interface: Private/Internal Network","text":"<p>We recommend to divide the server into two parts: 1. A map server running on a private network (\"Server\" layer) 2. A public facing server (\"Network\" layer) Communication between these two layers should be via plain, unencrypted HTTP.</p>"},{"location":"compendium/specification_reference_model/#layer-network","title":"Layer: Network","text":"<p>The network layer is critical to the delivery of files over the public Internet and addresses the security, availability and performance requirements associated with this.</p> <p>Currently we recommend: - to use a CDN provider or - to use a reverse proxy such as NGINX.</p>"},{"location":"compendium/specification_reference_model/#requirementsrecommendations_3","title":"Requirements/Recommendations","text":"<ul> <li>Transport Layer Security (TLS): Implement TLS to secure communication with certificate management.</li> <li>Security Measures: Protect against DDoS attacks and other security threats to maintain service integrity.</li> <li>Availability: Use load balancing techniques to balance traffic across servers.</li> <li>Performance: Use caching and/or content delivery networks (CDNs) to accelerate content delivery and reduce latency.</li> <li>Compliance and Best Practices: Adhere to industry standards and best practices for network security and performance.</li> </ul>"},{"location":"compendium/specification_reference_model/#status_3","title":"Status","text":"<p>Efforts have been made to evaluate and document CDN solutions, with a focus on price estimates:</p> <ul> <li>[x] \u2705 NGINX: could be the default solution for single server setups. We should publish some Docker Compose examples using NGINX and Let's Encrypt. (SWAG, traefik)</li> <li>[x] \u2705 Google CDN (80\u20ac/TB): Tested and used by SWR.</li> <li>[x] \u2705 Akamai CDN: Tested and used by NDR.</li> <li>[x] \ud83d\udfe8 Bunny CDN (5\u20ac/TB): Tested for tiles.versatiles.org. Unfortunately, BunnyCDN is currently unable to fetch or return compressed vector tiles. The \"content-encoding\" and \"vary: accept-encoding\" headers are being ignored. The CDN engineering team has been notified, but there is no ETA.</li> <li>[x] \ud83d\udfe8 BlazingCDN (5\u20ac/TB): Tested, but also unable to serve compressed vector tiles.</li> <li>[ ] Amazon CloudFront (90\u20ac/TB): Not tested yet.</li> <li>[ ] Cachefly ($30/TB, min. 300\u20ac/month): not tested yet</li> <li>[ ] CDN77 (4\\$/TB, min. 990\\$/month): not tested yet</li> <li>[ ] CDNetworks (40\\$/TB, min. 50\\$/month): not tested yet</li> <li>[ ] Cloudflare CDN (0$/TB, minimum cost: your soul): not yet tested</li> <li>[ ] Edgecast CDN: Not yet tested</li> <li>[ ] EdgeNext: not yet tested</li> <li>[ ] Fastly CDN (130$/TB): not yet tested</li> <li>[ ] KeyCDN (40$/TB): not tested yet</li> <li>[ ] Leaseweb (7$/TB, min. 150\u20ac/month): not tested yet</li> <li>[ ] Medianova CDN (200\\$/TB, min. 100\\$/month): not tested yet</li> <li>[ ] Microsoft Azure CDN ($75/TB): not tested yet</li> <li>[ ] OHV CDN (12\u20ac/TB, prepaid): not tested yet</li> </ul> <p>Documentation on how to use NGINX, including setup, configuration and a Docker image is under development.</p>"},{"location":"compendium/specification_reference_model/#interface-public-network","title":"Interface: Public Network","text":"<p>HTTP traffic encrypted with TLS.</p>"},{"location":"compendium/specification_reference_model/#layer-frontend","title":"Layer: Frontend","text":"<p>The frontend layer is the graphical interface that presents the map tiles to the user. While numerous frameworks such as MapLibre GL JS, Mapbox, OpenLayers and Leaflet are available for this purpose, our focus is on MapLibre. This choice is due to MapLibre's ability to efficiently render vector tiles on the GPU, its open source licence and its comprehensive support for JavaScript, iOS and Android platforms.</p>"},{"location":"compendium/specification_reference_model/#requirementsrecommendations_4","title":"Requirements/Recommendations","text":"<ul> <li>The frontend SHOULD be able to draw Shortbread vector tiles and raster tiles.</li> <li>See the VersaTiles Frontend Specifications for more information.</li> </ul>"},{"location":"compendium/specification_reference_model/#status_4","title":"Status","text":"<p>Progress in the development and implementation of the frontend layer includes</p> <ul> <li>[x] Style Templating Engine: Implemented to allow dynamic generation of map styles. (Repository)</li> <li>[x] Style Library: A collection of predefined map styles is available. (Repository)</li> <li>[x] Fonts: Prepared default fonts. (Repository)</li> <li>[x] Sprites using signed distance fields: ... to ensure that icons and symbols are scalable, colourable and clear at any zoom level. (Repository)</li> <li>[x] Multiple frontends are available: a minimal version and a large developer version (Repository)</li> <li>[ ] Right-to-left (RTL) label support: Efforts are underway to add support for RTL languages, such as Arabic, to ensure that maps are accessible to a global audience. (Issue)</li> </ul>"},{"location":"compendium/tools/","title":"Tools","text":"<p>In our roadmap we plan to develop a number of useful tools aimed at improving the usability and functionality of web-based mapping solutions:</p> <ul> <li>[ ] Editorial Tools: A comprehensive suite of web-based tools designed specifically for newsrooms, enabling the rapid creation of maps:</li> <li>[ ] Locator Map: A streamlined tool for creating maps that pinpoint a single location with customisable labels. Ideal for illustrating the location of local events such as demonstrations, emergencies or incidents.</li> <li>[ ] Area Map: Allows you to create maps that delineate areas with additional symbols (such as arrows) and annotations. This tool is particularly useful for visualising large-scale effects such as exclusion zones, areas affected by natural disasters or military front lines.</li> <li>[ ] Points Map: A utility for plotting a large number of points on a map from data files (CSV, Excel) containing geocoordinates or addresses. Applications include mapping events such as bicycle accidents, showing places of interest such as Christmas markets, or indicating facilities such as COVID-19 test centres.</li> <li>[ ] GeoJSON BBOX Tool: An easy-to-use web tool for selecting a bounding box (bbox) on a map and exporting the coordinates in various formats, simplifying the process of defining map extents.</li> <li>[ ] Installer: A web tool that provides customised installation instructions for setting up a map server for a selected region, tailored for multiple platforms including Linux, MacOS, Raspberry Pi and more.</li> <li>[ ] Style-Maker: A plugin for MapLibre that facilitates the customisation of map styles, allowing users to seamlessly change colours, fonts and language settings. (Repository)</li> <li>[ ] Backend Renderer: A JavaScript library designed to render specified map regions in PNG or SVG format, providing a flexible solution for static map generation. (Repository)</li> <li>[ ] VersaTiles-Studio: A desktop application developed in Rust that allows the conversion of geographic data into vector tiles while optimising the tile size.</li> <li>[ ] Generate City Maps: An interactive web demonstration of the capabilities of VersaTiles, allowing users to select a region and automatically generate a stylized city map poster in black and white. (Examples)</li> <li>[ ] Style Converter: A NodeJS utility for converting map styles from the OpenMapTiles schema to the Shortbread schema.</li> </ul>"},{"location":"compendium/wider_perspective/","title":"A wider perspective on VersaTiles","text":"<p>We don't own our planet. Imposing copyright or ownership on any representation of our world, including photographs or geographic data, is fundamentally misguided. Geographic information is a common resource that should remain freely available to all of us.</p> <p>Privatisation of infrastructure is harmful to society. It paves the way for monopolies that serve the interests of a few, often driven by personal greed and exploitation. When control of critical infrastructure is concentrated in the hands of private companies, it reduces access and stifles innovation. The consequences are clear: higher costs, reduced choice and a lack of transparency that benefits corporations over communities.</p> <p>VersaTiles is driven by the goal of democratising mapping data and tools. We believe that geographic information should be available to everyone, not just those with deep pockets. By providing open access to map data and infrastructure, VersaTiles ensures that individuals, communities and organisations around the world can freely build, use and share geographic knowledge. This empowerment fosters innovation, encourages collaboration and ultimately benefits society as a whole.</p>"},{"location":"compendium/wider_perspective/#core-values","title":"Core Values","text":"<p>VersaTiles' core values are rooted in the principles of openness, freedom and empowerment. Our mission is to enable both users and contributors to collaborate, innovate and benefit from shared geographic information and tools. We believe that open source software is a catalyst for creativity, problem solving and collective progress.</p> <p>We uphold these values through</p> <ul> <li> <p>Open Standards: VersaTiles is committed to openly documented protocols and formats that ensure interoperability and flexibility among mapping solutions. By adopting open standards, we empower developers and organisations to build systems that work together seamlessly, free from vendor lock-in or proprietary restrictions.</p> </li> <li> <p>Open Data: We are strongly committed to unrestricted access to geographic data. We support initiatives that encourage data sharing, believing that the free exchange of information enriches public knowledge, spurs innovation and drives societal progress.</p> </li> <li> <p>Open Source: VersaTiles is being developed in an open, transparent environment where anyone can contribute, review or use the software. This openness promotes collaboration, enhances security through auditability, and fosters a vibrant ecosystem of applications, users and contributors.</p> </li> <li> <p>Prefer free to open: While we are committed to openness, we prioritise the creation and use of free standards, data and software whenever possible. This commitment ensures that everyone, regardless of resources, can access and contribute to the tools and knowledge.</p> </li> </ul>"},{"location":"compendium/wider_perspective/#support","title":"Support","text":"<p>Maintaining the non-commercial ethos of VersaTiles while supporting ongoing development and infrastructure presents unique challenges.  To address these challenges, we are actively seeking grants and partnerships to secure financial support for both development and infrastructure maintenance to ensure the long-term viability of the project. We are also encouraging the community and beneficiaries of VersaTiles to contribute code.</p>"},{"location":"compendium/wider_perspective/#legal-entity","title":"Legal entity","text":"<p>Determining the most appropriate legal structure to handle donations, financial transactions and governance is a critical factor in the future of VersaTiles. This decision is essential to establish a solid foundation for the project, enabling us to accept donations, manage resources and ensure long-term sustainability.</p> <p>Options under consideration include</p> <ul> <li> <p>Independent entity: Setting up VersaTiles as a fully independent legal entity. This would allow full control over decision making and operations, but would also mean taking on full responsibility for organisational management, including legal, financial and administrative tasks. This route requires significant effort to build and maintain a robust organisation from scratch, which could take focus away from development.</p> </li> <li> <p>Part of an existing foundation: Integrate VersaTiles as part of an existing foundation or organisation. This option has the advantage of using existing legal and financial frameworks, allowing the project to focus on its core mission of developing open source mapping tools. However, it may involve a loss of autonomy, as we would have to conform to the policies and governance structures of the parent organisation.</p> </li> </ul> <p>There are benefits and risks to both options. Establishing an independent entity requires significant resources and expertise, and could impose a heavy administrative burden, potentially slowing the growth of the project. On the other hand, joining an existing foundation could limit our autonomy and force us to deal with the constraints of external governance. These risks are why we are carefully evaluating both paths and taking the time to find a clear way forward that balances autonomy with sustainability and ensures that VersaTiles continues to thrive without compromising its values.</p>"},{"location":"guides/deploy_in_google_cloud/","title":"How to run a VersaTiles service in Google Cloud Run?","text":""},{"location":"guides/deploy_in_google_cloud/#1-create-a-google-bucket","title":"1. Create a Google Bucket","text":"<p>See also the Google documentation: Create buckets.</p>"},{"location":"guides/deploy_in_google_cloud/#2-upload-the-versatiles-planet-to-your-bucket","title":"2. Upload the VersaTiles planet to your bucket","text":"<p>See also the How to transfer the VersaTiles planet to Google Cloud Storage.</p>"},{"location":"guides/deploy_in_google_cloud/#3-create-a-git-repo-with-a-dockerfile","title":"3. Create a Git Repo with a <code>Dockerfile</code>","text":"<ul> <li>Create an empty Git repository.</li> <li>Add a file with the filename \"Dockerfile\" with the following content: <pre><code># Use the latest docker image of VersaTiles including the frontend.\nFROM versatiles/versatiles-frontend:latest-alpine\n\n# Expose necessary port.\nEXPOSE $PORT\n\n# Start the VersaTiles server with the following parameters:\n#   -p $PORT: Set the port\n#   -s frontend.br.tar: serve the frontend as static content, if you like\n#   \"[osm]https://...\" is the url of the VersaTiles container\n#      - enter the correct url of the file in your Google Bucket\n#      - make sure, this file is publicly accessible\n#      - \"[osm]\" sets the name of the tile source\n#      - you can append more entries if you want to host multiple tile sources\nCMD versatiles serve \\\n    -i 0.0.0.0 \\\n    -p $PORT \\\n    -s frontend.br.tar \\\n    \"[osm]https://storage.googleapis.com/bucket_name/folder_name/planet_???.versatiles\"\n</code></pre></li> <li>Don't forget to update the last line of <code>Dockerfile</code> to point to your Google Bucket</li> <li>Commit and push the new \"Dockerfile\"</li> </ul>"},{"location":"guides/deploy_in_google_cloud/#4-create-a-google-cloud-run-service","title":"4. Create a Google Cloud Run Service","text":"<ul> <li>Go to Google Cloud Run</li> <li>Create a new service</li> <li>Select \"Continuously deploy new revisions from a source repository\".</li> <li>Click on \"SET UP CLOUD BUILD\". A Popup appears:<ul> <li>\"Source repository\": Select you repository containing the <code>Dockerfile</code>. If you can't find your repository you have to \"Manage connected repositories\". Click \"NEXT\".</li> <li>\"Branch\" is \"^main$\", for \"Build type\" select \"Dockerfile\". Click \"SAVE\".</li> </ul> </li> <li>Now you can choose \"Service name\" and \"Region\"</li> <li>\"Allow direct access to your service from the Internet\"</li> <li>For \"Authentication\" select \"Allow unauthenticated invocations\".</li> <li>When finished click button \"CREATE\".</li> <li>Check if the service is running correctly: Open the link in \"Service details\" (something like: https://***.run.app). You should see an interactive map.</li> </ul>"},{"location":"guides/deploy_in_google_cloud/#4-add-a-load-balancer","title":"4. Add a load balancer","text":"<ul> <li>Add a domain/subdomain, point it to an IP. (better: IPv4+IPv6)</li> <li>Use these IPs as frontend for a load balancer.</li> <li>Backend is a \"serverless network endpoint group\". Point it to your Cloud Run Service.</li> <li>Activate the CDN in the backend.</li> </ul>"},{"location":"guides/deploy_on_debian/","title":"How to run a VersaTiles server with nginx on Debian","text":"<p>Your server requires as an absolute minimum: - 2 CPU cores - 4 GB RAM - 60 GB free disk space</p>"},{"location":"guides/deploy_on_debian/#0-create-a-user-versatiles","title":"0. Create a user \"versatiles\"","text":""},{"location":"guides/deploy_on_debian/#1-update-the-server-and-install-dependencies","title":"1. Update the server and install dependencies","text":"<pre><code>sudo apt update\nsudo apt -q install -y aria2 curl nginx build-essential libsqlite3-dev pkg-config openssl libssl-dev # git wget unzip tmux htop sysstat brotli cmake ifstat gnupg2 ca-certificates lsb-release\n</code></pre>"},{"location":"guides/deploy_on_debian/#2-install-rust","title":"2. Install Rust","text":"<pre><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nsource \"$HOME/.cargo/env\"\n</code></pre>"},{"location":"guides/deploy_on_debian/#3-install-versatiles","title":"3. Install VersaTiles","text":"<pre><code>cargo install versatiles\n</code></pre>"},{"location":"guides/deploy_on_debian/#4-download-frontend-and-tiles","title":"4. Download frontend and tiles","text":"<pre><code>cd ~\nmkdir versatiles\ncd versatiles\ncurl -Lo frontend.br.tar \"https://github.com/versatiles-org/versatiles-frontend/releases/latest/download/frontend.br.tar\"\naria2c --seed-time=0 \"https://download.versatiles.org/planet-20230227.versatiles.torrent\"\n</code></pre> <p>Not tested from here on</p>"},{"location":"guides/deploy_on_debian/#5-config-nginx","title":"5. config nginx","text":"<pre><code>sudo nano /etc/nginx/sites-available/default\n# add:\n# location / {\n# \u00a0 proxy_pass http://localhost:8080/;\n# }\nsudo systemctl restart nginx\n</code></pre>"},{"location":"guides/deploy_on_debian/#6-prepare-a-versatiles-service","title":"6. prepare a VersaTiles service","text":"<pre><code>sudo cat &gt; /etc/systemd/system/versatiles.service &lt;&lt;EOF\n[Unit]\nDescription=VersaTiles server\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nType=simple\nExecStart=versatiles serve \"2023-01-planet.versatiles#osm\" --static-tar frontend.br.tar -p 8080 -i 0.0.0.0\nWorkingDirectory=/home/abhi/Dev/echo-server\nRestart=always\nRestartSec=5\nStandardOutput=syslog\nStandardError=syslog\nSyslogIdentifier=%n\nEOF\n</code></pre>"},{"location":"guides/deploy_on_debian/#7-start-service","title":"7. start service","text":"<pre><code>sudo systemctl start versatiles\n</code></pre>"},{"location":"guides/develop_frontend/","title":"Develop frontend","text":"<pre><code>git clone sprites\nrun in sprites: ./bin/build_png.js\n\ngit clone styles\nrun in styles: ./bin/make_styles.js http://localhost:8080/\n\ndownload + untar frontend\nadd demo.html\n\ndownload planet\n\nversatiles serve --fast \\\n    -s \"../versatiles-styles/dist[/assets/styles/]\" \\\n    -s \"../versatiles-sprites/dist[/assets/sprites/]\" \\\n    -s ../versatiles-frontend/dist/frontend \\\n    \"planet-20230925.versatiles[osm]\"\n\nopen http://localhost:8080/demo.html\n</code></pre>"},{"location":"guides/download_tiles.ko/","title":"\ud0c0\uc77c \ub2e4\uc6b4\ub85c\ub4dc \ubc29\ubc95","text":"<ul> <li>\uac1c\uc778 \uc11c\ubc84\ub85c \ub2e4\uc6b4\ub85c\ub4dc</li> <li>\uc804\uccb4 \ub2e4\uc6b4\ub85c\ub4dc</li> <li>\ubd80\ubd84 \ub2e4\uc6b4\ub85c\ub4dc</li> <li>Google Cloud Storage\ub85c \ub2e4\uc6b4\ub85c\ub4dc</li> </ul>"},{"location":"guides/download_tiles.ko/#_2","title":"\uac1c\uc778 \uc11c\ubc84\ub85c \ub2e4\uc6b4\ub85c\ub4dc","text":""},{"location":"guides/download_tiles.ko/#_3","title":"\uc804\uccb4 \ub2e4\uc6b4\ub85c\ub4dc","text":"<p>download.versatiles.org\uc5d0\uc11c \uc804 \uc138\uacc4 \ud0c0\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <pre><code>wget -c \"https://download.versatiles.org/osm.versatiles\"\n</code></pre> <ul> <li><code>-c</code>: \ub2e4\uc6b4\ub85c\ub4dc\uac00 \uc911\uac04\uc5d0 \uc911\ub2e8\ub418\uc5c8\uc744 \uacbd\uc6b0 \uc774\uc5b4\uc11c \ub2e4\uc6b4\ub85c\ub4dc\ud569\ub2c8\ub2e4.</li> <li><code>\"https://download.versatiles.org/osm.versatiles\"</code>: \ub2e4\uc6b4\ub85c\ub4dc\ud560 \ud30c\uc77c\uc758 URL\uc785\ub2c8\ub2e4.</li> </ul> <p>\uc774 \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uba74 <code>osm.versatiles</code> \ud30c\uc77c\uc744 \ud604\uc7ac \ub514\ub809\ud1a0\ub9ac\uc5d0 \ub2e4\uc6b4\ub85c\ub4dc\ud569\ub2c8\ub2e4.</p>"},{"location":"guides/download_tiles.ko/#_4","title":"\ubd80\ubd84 \ub2e4\uc6b4\ub85c\ub4dc","text":"<p>\ub300\ub959\uc774\ub098 \uad6d\uac00\uc640 \uac19\uc774 \ud2b9\uc815 \uc9c0\uc5ed\uc758 \ud0c0\uc77c\ub9cc \ud544\uc694\ud560 \uacbd\uc6b0, <code>versatiles convert</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2e4\uc6b4\ub85c\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uc90c \ub808\ubca8\uacfc \uc9c0\ub9ac\uc801 \uacbd\uacc4 \uc0c1\uc790\ub97c \uc9c0\uc815\ud558\ub294 \ud544\ud130\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"guides/download_tiles.ko/#versatiles-convert","title":"<code>versatiles convert</code> \uba85\ub839\uc5b4 \uc0ac\uc6a9\ubc95","text":"<p><code>versatiles convert</code> \uba85\ub839\uc5b4\ub294 \ud2b9\uc815 \uc9c0\uc5ed\uc758 \ud0c0\uc77c\uc744 \ubd84\ub9ac\ud558\uc5ec \ub2e4\uc6b4\ub85c\ub4dc\ud560 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc0ac\uc6a9\ubc95\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:</p> <pre><code>versatiles convert [\uc635\uc158] [\uc18c\uc2a4 URL] [\ub300\uc0c1 \ud30c\uc77c\uba85]\n</code></pre>"},{"location":"guides/download_tiles.ko/#_5","title":"\uc635\uc158 \uc124\uba85","text":"<ul> <li><code>--bbox</code>: \ub2e4\uc6b4\ub85c\ub4dc\ud560 \uc9c0\uc5ed\uc758 \uacbd\uacc4 \uc0c1\uc790\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uac12\uc740 \uc11c\uacbd, \ub0a8\uc704, \ub3d9\uacbd, \ubd81\uc704\uc758 \uc21c\uc11c\ub85c \uc785\ub825\ud569\ub2c8\ub2e4.</li> <li><code>--bbox-border</code>: \uacbd\uacc4 \uc0c1\uc790\uc5d0 \ucd94\uac00\ud560 \ud0c0\uc77c \uc218\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uacbd\uacc4\uc5d0\uc11c \ucd94\uac00\ub85c \ud3ec\ud568\ud560 \ud0c0\uc77c\uc758 \uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4.</li> <li><code>--min-zoom</code>: \ub2e4\uc6b4\ub85c\ub4dc\ud560 \ucd5c\uc18c \uc90c \ub808\ubca8\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774 \uac12\uc774 \ub0ae\uc744\uc218\ub85d \ub354 \ub113\uc740 \uc601\uc5ed\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4.</li> <li><code>--max-zoom</code>: \ub2e4\uc6b4\ub85c\ub4dc\ud560 \ucd5c\ub300 \uc90c \ub808\ubca8\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc774 \uac12\uc774 \ub192\uc744\uc218\ub85d \ub354 \uc138\ubc00\ud55c \uc815\ubcf4\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4.</li> </ul>"},{"location":"guides/download_tiles.ko/#_6","title":"\uc608\uc2dc","text":"<p>\ub2e4\uc74c\uc740 \uc2a4\uc704\uc2a4 \uc9c0\uc5ed\uc758 \ud0c0\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294 \uc608\uc2dc\uc785\ub2c8\ub2e4:</p> <pre><code>versatiles convert --bbox-border 3 --bbox \"5.956,45.818,10.492,47.808\" https://download.versatiles.org/osm.versatiles switzerland.versatiles\n</code></pre> <ul> <li><code>--bbox-border 3</code>: \uacbd\uacc4\uc5d0 3 \ud0c0\uc77c\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4.</li> <li><code>--bbox \"5.956,45.818,10.492,47.808\"</code>: \ub2e4\uc6b4\ub85c\ub4dc\ud560 \uc9c0\uc5ed\uc758 \uacbd\uacc4 \uc0c1\uc790\uc785\ub2c8\ub2e4.</li> <li><code>https://download.versatiles.org/osm.versatiles</code>: \uc18c\uc2a4 \ud30c\uc77c\uc758 URL\uc785\ub2c8\ub2e4.</li> <li><code>switzerland.versatiles</code>: \uc0dd\uc131\ub420 \ub300\uc0c1 \ud30c\uc77c\uba85\uc785\ub2c8\ub2e4.</li> </ul> <p>\uc774 \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud558\uba74 \uc9c0\uc815\ub41c \uacbd\uacc4 \uc0c1\uc790 \ub0b4\uc758 \ud0c0\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uc5ec <code>switzerland.versatiles</code> \ud30c\uc77c\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4.</p>"},{"location":"guides/download_tiles.ko/#google-cloud-storage","title":"Google Cloud Storage\ub85c \ub2e4\uc6b4\ub85c\ub4dc","text":"<p>VersaTiles \ub370\uc774\ud130\ub97c Google Cloud Storage\uc5d0 \uc800\uc7a5\ud558\ub824\uba74 \ub2e4\uc74c \ub2e8\uacc4\ub97c \ub530\ub974\uc138\uc694:</p> <ul> <li> <p>Google Cloud Storage \ubc84\ud0b7 \uc900\ube44 Google \ubb38\uc11c\ub97c \ub530\ub77c \uc0c8 \ubc84\ud0b7\uc744 \ub9cc\ub4ed\ub2c8\ub2e4.</p> </li> <li> <p>\ucd5c\uc2e0 \ub370\uc774\ud130 \ubcf5\uc0ac download.versatiles.org\uc5d0\uc11c <code>osm.versatiles</code> \ud30c\uc77c\uc744 \ubc84\ud0b7\uc73c\ub85c \uc804\uc1a1\ud569\ub2c8\ub2e4.</p> </li> </ul> <p>\uc138 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4:</p> <ol> <li> <p>\uc790\ub3d9 \uc804\uc1a1</p> <ul> <li>\ubc84\ud0b7 \uc138\ubd80\uc815\ubcf4\ub85c \uc774\ub3d9\ud558\uc5ec \ub370\uc774\ud130 \uc804\uc1a1\uc744 \ud074\ub9ad\ud55c \ud6c4 \ub370\uc774\ud130 \uc804\uc1a1 \uc2dc\uc791\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4.</li> <li>\uc18c\uc2a4 \uc720\ud615: URL \ubaa9\ub85d\uc744 \uc120\ud0dd\ud558\uace0 \ub2e4\uc74c \ub2e8\uacc4\ub85c \uc9c4\ud589\ud569\ub2c8\ub2e4.</li> <li>URL \ubaa9\ub85d \ud30c\uc77c\uc758 URL\ub85c <code>https://download.versatiles.org/urllist_osm.tsv</code>\ub97c \uc785\ub825\ud558\uace0 \uc9c4\ud589\ud569\ub2c8\ub2e4.</li> <li>\ub300\uc0c1 \ubc84\ud0b7\uacfc \ud3f4\ub354\ub97c \uc120\ud0dd\ud558\uba74 \ud55c \ubc88 \uc2e4\ud589, \uc9c0\uae08 \uc2dc\uc791\uc744 \uc120\ud0dd\ud558\uace0 \uc0dd\uc131\uc744 \ud074\ub9ad\ud558\uc5ec \ub9c8\ubb34\ub9ac\ud569\ub2c8\ub2e4.</li> </ul> </li> <li> <p>\uc218\ub3d9 \uc804\uc1a1</p> <ul> <li><code>wget</code> \ub610\ub294 <code>versatiles convert</code>\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc804 \uc138\uacc4 \ub610\ub294 \ud2b9\uc815 \uc9c0\uc5ed\uc758 \ud0c0\uc77c\uc744 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub2e4\uc6b4\ub85c\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\ubc84\ud0b7\uc5d0 \uc784\uc758\ub85c \ud30c\uc77c\uc744 \uc5c5\ub85c\ub4dc\ud569\ub2c8\ub2e4: \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0\uc11c Google \ud074\ub77c\uc6b0\ub4dc\ub85c \uc5c5\ub85c\ub4dc</li> </ul> </li> <li> <p>Google VM \uc804\uc1a1</p> <ul> <li>Google Compute Engine VM\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\uc6b4\ub85c\ub4dc\uc640 \uc5c5\ub85c\ub4dc\ub97c \ubaa8\ub450 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul> </li> <li> <p>\uacf5\uac1c \uc561\uc138\uc2a4 \uc124\uc815   \ubc84\ud0b7 \ub610\ub294 \ud30c\uc77c\uc744 \uacf5\uac1c \uc561\uc138\uc2a4\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4.  \uacf5\uac1c \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uc774\uc720   VersaTiles\ub294 \ud604\uc7ac Google Cloud \uc778\uc99d\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c, HTTPS\ub97c \ud1b5\ud574 \ub370\uc774\ud130\ub97c \uac80\uc0c9\ud558\ub824\uba74 \uacf5\uac1c \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.   \ud5a5\ud6c4 \ubc84\uc804\uc5d0\uc11c\ub294 Google Cloud Run\uc758 \uc790\ub3d9 \uc778\uc99d\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 [issue versatiles-rs#22](https://github.com/versatiles-org/versatiles-rs/issues/22) \ub97c \ucc38\uc870\ud558\uc138\uc694.    </p> </li> </ol>"},{"location":"guides/download_tiles/","title":"How to download tiles?","text":""},{"location":"guides/download_tiles/#direct-download","title":"Direct download","text":"<p>You can download tiles for the whole planet from the official site download.versatiles.org.</p> <p>To make downloading easier, you can use <code>wget</code>. The <code>-c</code> flag can be added to resume an interrupted download:</p> <pre><code>wget -c \"https://download.versatiles.org/osm.versatiles\"\n</code></pre>"},{"location":"guides/download_tiles/#partial-download","title":"Partial download","text":"<p>If you only need tiles for a specific region, like a continent or a country, you can use VersaTiles to download them. Filters can be applied to specify minimum and maximum zoom levels, as well as a geographical bounding box.</p> <p>For example, to download only tiles for Switzerland (including 3 tiles as border): <pre><code>versatiles convert --bbox-border 3 --bbox \"5.956,45.818,10.492,47.808\" https://download.versatiles.org/osm.versatiles switzerland.versatiles\n</code></pre></p> <p>Or, very similarly, how to download Germany <pre><code>versatiles convert --bbox-border 3 --bbox \"5.988,47.302,15.017,54.983\" https://download.versatiles.org/osm.versatiles germany.versatiles\n</code></pre> <pre><code>versatiles convert --bbox-border 3 --bbox \"5.988,47.302,15.017,54.983\" --min-zoom 10 --max-zoom 14  https://download.versatiles.org/planet-latest.versatiles germany.versatiles\n</code></pre></p>"},{"location":"guides/download_tiles/#downloading-to-google-cloud-storage","title":"Downloading to Google Cloud Storage","text":"<p>To store VersaTiles data on Google Cloud Storage, follow these steps:</p> <ul> <li> <p>Prepare a Google Cloud Storage Bucket   Follow the Google documentation to create a new bucket.</p> </li> <li> <p>Copy the Latest Data   Transfer \"osm.versatiles\" file from download.versatiles.org to your bucket. There are 3 ways to do that:</p> </li> <li> <p>Automated Transfer</p> <ul> <li>Navigate to \"Bucket details\" and click on \"TRANSFER DATA\", then \"Transfer data in\".</li> <li>Select \"Source type: URL list\" and proceed to the next step.</li> <li>Enter \"https://download.versatiles.org/urllist_osm.tsv\" as the \"URL of TSV file\" and proceed.</li> <li>Specify your bucket and folder as the destination, and continue.</li> <li>Opt for \"Run once\", \"Starting now\", and finalize by clicking \"CREATE\".</li> <li>Monitor the transfer status here.</li> <li>Note: Transfer speed may be limited to around 10 MB/s for unspecified reasons.</li> </ul> </li> <li> <p>Manual Transfer</p> <ul> <li>Use <code>wget</code> or <code>curl</code> to download the file and <code>gscloud</code> to upload it, if you have a high-speed internet connection.</li> </ul> </li> <li> <p>Google VM Transfer</p> <ul> <li>Alternatively, use a Google Compute Engine VM for both downloading and uploading.</li> </ul> </li> <li> <p>Set Public Access   The bucket or the file must be set to public access.  Why Public Access is Required   VersaTiles currently does not support Google Cloud authentication. Therefore, public access is necessary for HTTPS retrieval. Future versions may include support for Google Cloud Run's automatic authentication. For more details, refer to [issue versatiles-rs#22](https://github.com/versatiles-org/versatiles-rs/issues/22). </p> </li> </ul>"},{"location":"guides/install_versatiles.ko/","title":"VersaTiles \uc124\uce58","text":"<p>\uc2dc\uc2a4\ud15c\uc5d0 VersaTiles\ub97c \uc124\uce58\ud558\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4.</p> <ul> <li>Release\ub41c \ubc14\uc774\ub108\ub9ac \ub2e4\uc6b4\ub85c\ub4dc</li> <li>\ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790 \uc0ac\uc6a9</li> <li>Debian \uacc4\uc5f4 Linux</li> <li>MacOS</li> <li>Rust\uc640 Cargo\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc18c\uc2a4\uc5d0\uc11c \ube4c\ub4dc</li> </ul>"},{"location":"guides/install_versatiles.ko/#_1","title":"\ubc14\uc774\ub108\ub9ac \ub2e4\uc6b4\ub85c\ub4dc","text":"<p>Releases \ud398\uc774\uc9c0\uc5d0\uc11c Linux\uc640 Mac \uc6b4\uc601\uccb4\uc81c\ub97c \uc704\ud55c Rust\ub85c \uc0ac\uc804 \ucef4\ud30c\uc77c\ub41c \ubc14\uc774\ub108\ub9ac\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.  </p> <p>\uc544\ub798 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \uc0ac\uc804 \ucef4\ud30c\uc77c\ub41c \ubc14\uc774\ub108\ub9ac\ub97c \ub2e4\uc6b4\ub85c\ub4dc\ud558\uc5ec <code>versatiles</code>\ub97c \uc124\uce58\ud569\ub2c8\ub2e4.</p> \uc811\uae30/\ud3bc\uce58\uae30 <pre><code>#!/bin/bash\n\n[ \"$EUID\" -ne 0 ] &amp;&amp; echo \"This script must be run as root.\" &amp;&amp; exit 1\nset -e\n\n# Determine OS and ARCH\nOS=$(uname -s | tr '[:upper:]' '[:lower:]')\nARCH=$(uname -m)\nLIBC=$(ldd --version 2&gt;&amp;1 | head -n 1 | grep -o 'musl\\|glibc' || echo \"gnu\")\n\n# Determine SUFFIX\ncase \"$OS-$ARCH\" in\n  linux-aarch64) SUFFIX=\"linux-${LIBC}-aarch64.tar.gz\" ;;\n  linux-x86_64)  SUFFIX=\"linux-${LIBC}-x86_64.tar.gz\" ;;\n  darwin-arm64)  SUFFIX=\"macos-aarch64.tar.gz\" ;;\n  darwin-x86_64) SUFFIX=\"macos-x86_64.tar.gz\" ;;\n  *) echo \"Unsupported OS/ARCH: $OS-$ARCH\" &amp;&amp; exit 1 ;;\nesac\n\n# Download and install\nURL=\"https://github.com/versatiles-org/versatiles-rs/releases/latest/download/versatiles-$SUFFIX\"\ncurl -Ls \"$URL\" | tar -xzf - -C /usr/local/bin versatiles &amp;&amp; chmod +x /usr/local/bin/versatiles\n\nversatiles --version\n</code></pre>"},{"location":"guides/install_versatiles.ko/#_2","title":"\ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790 \uc0ac\uc6a9","text":""},{"location":"guides/install_versatiles.ko/#debian-linux","title":"Debian \uacc4\uc5f4 Linux","text":"<p>\uc544\ub798 \uc2a4\ud06c\ub9bd\ud2b8\ub294 Dpkg\ub97c \uc0ac\uc6a9\ud558\uc5ec <code>versatiles</code>\ub97c \uc124\uce58\ud569\ub2c8\ub2e4.</p> \uc811\uae30/\ud3bc\uce58\uae30 <pre><code>#!/bin/bash\n\n[ \"$EUID\" -ne 0 ] &amp;&amp; echo \"This script must be run as root.\" &amp;&amp; exit 1\nset -e\n\n# Determine OS and ARCH\nOS=$(uname -s | tr '[:upper:]' '[:lower:]')\nARCH=$(uname -m)\n\n# Determine DEB package name\ncase \"$OS-$ARCH\" in\n  linux-aarch64) DEB_PACKAGE=\"versatiles-linux-gnu-aarch64.deb\" ;;\n  linux-x86_64)  DEB_PACKAGE=\"versatiles-linux-gnu-x86_64.deb\" ;;\n  *) echo \"Unsupported OS/ARCH: $OS-$ARCH\" &amp;&amp; exit 1 ;;\nesac\n\n# Download, install, and clean up in one line\nURL=\"https://github.com/versatiles-org/versatiles-rs/releases/latest/download/$DEB_PACKAGE\"\ncurl -Ls -o \"/tmp/$DEB_PACKAGE\" \"$URL\" &amp;&amp; dpkg -i \"/tmp/$DEB_PACKAGE\" &amp;&amp; rm \"/tmp/$DEB_PACKAGE\"\n\nversatiles --version\n</code></pre>"},{"location":"guides/install_versatiles.ko/#macos","title":"MacOS","text":"<p>Homebrew\ub97c \uc0ac\uc6a9\ud558\uc5ec <code>versatiles</code>\ub97c \uc124\uce58\ud558\ub824\uba74 \ud130\ubbf8\ub110\uc5d0\uc11c \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4.</p> <pre><code>brew tap diverses-org/versatiles\nbrew install versatiles\n</code></pre> <p>\ucd5c\uc2e0 \ubc84\uc804\uc758 <code>versatiles</code>\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4.</p> <pre><code>brew update\nbrew upgrade versatiles\n</code></pre>"},{"location":"guides/install_versatiles.ko/#rust-cargo","title":"Rust\uc640 Cargo\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc18c\uc2a4\uc5d0\uc11c \ube4c\ub4dc","text":"<p>\uc18c\uc2a4\uc5d0\uc11c <code>versatiles</code>\ub97c \ube4c\ub4dc\ud558\ub824\uba74 \uc2dc\uc2a4\ud15c\uc5d0 Rust\uc640 Cargo\uac00 \uc124\uce58\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc124\uce58\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc73c\uba74 \uc5ec\uae30\uc5d0\uc11c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>Rust\uc640 Cargo\ub97c \uc124\uce58\ud55c \ud6c4 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4.</p> <pre><code>cargo install versatiles --all-features\n</code></pre>"},{"location":"guides/install_versatiles/","title":"VersaTiles Installation Guide","text":"<p>This guide outlines various methods to install VersaTiles on your system:</p> <ul> <li>Using a Package Manager<ul> <li>Homebrew for MacOS</li> </ul> </li> <li>Downloading the Released Binary</li> <li>Building from Source using Rust and Cargo</li> </ul>"},{"location":"guides/install_versatiles/#homebrew-for-macos","title":"Homebrew for MacOS","text":"<p>To install VersaTiles using Homebrew, execute the following commands in your terminal:</p> <pre><code>brew tap versatiles-org/versatiles\nbrew install versatiles\n</code></pre> <p>If you want to upgrade to the newest version of versatiles, run:</p> <pre><code>brew update\nbrew upgrade versatiles\n</code></pre>"},{"location":"guides/install_versatiles/#downloading-the-binary","title":"Downloading the binary","text":"<p>For every new release, we provide pre-compiled binaries for various operating systems and architectures. You can download the latest binary from the following link:</p> <p>Latest Release on GitHub</p>"},{"location":"guides/install_versatiles/#building-from-source","title":"Building from source","text":"<p>To build VersaTiles from source, you'll need to have Rust and Cargo installed on your system. If you don't have them, you can install them here.</p> <p>After installing Rust and Cargo, run the following command:</p> <pre><code>cargo install versatiles --all-features\n</code></pre>"},{"location":"guides/local_server_debian/","title":"How to run a local VersaTiles server on debian","text":"<p>In this guide, we will explain how to set up and run a local VersaTiles server. We will also discuss how to download the necessary files and start the server with an optional frontend.</p> <p>[!NOTE] The VersaTiles server is written in Rust (Repo: versatiles-rs).</p>"},{"location":"guides/local_server_debian/#step-1-install-the-versatiles-tool","title":"Step 1: Install the VersaTiles tool","text":"<p>We provide precompiled binaries for multiple plattforms and architectures. See Installing Versatiles: Downloading the binary.</p> <p>But you might prefer to compile it from source using Rust and Cargo: See Installing Versatiles: Building from source.</p>"},{"location":"guides/local_server_debian/#step-2-download-the-versatiles-planet","title":"Step 2: Download the VersaTiles planet","text":"<p>The VersaTiles data file is a compact file containing all map tiles for the entire planet. You can download it with <code>wget</code>:</p> <pre><code>wget -c https://download.versatiles.org/osm.versatiles\n</code></pre> <p>If you need only a part of the planet, e.g. only a continent/country/city, you can download this part using the <code>versatiles</code> tool. See: download tiles</p> <p>Once the download is complete, save the <code>.versatiles</code> file in a directory of your choice.</p>"},{"location":"guides/local_server_debian/#step-3-download-the-optional-frontend","title":"Step 3: Download the optional frontend","text":"<p>The frontend might be helpful because it includes JavaScript libraries, map styles, and fonts. You can download the latest frontend using <code>wget</code> by running the following command:</p> <pre><code>wget \"https://github.com/versatiles-org/versatiles-frontend/releases/latest/download/frontend.br.tar\"\n</code></pre> <p>Save the <code>frontend.br.tar</code> file in the same directory as the <code>.versatiles</code> file.</p>"},{"location":"guides/local_server_debian/#step-3-start-the-versatiles-server","title":"Step 3: Start the VersaTiles server","text":"<p>To start the VersaTiles server, open a shell, navigate to the directory where you saved the <code>.versatiles</code> file and the frontend file, and run:</p> <pre><code>versatiles serve -s frontend.br.tar \"[osm]osm.versatiles\"\n</code></pre> <p>The VersaTiles server will now be running locally on your machine. To test it open <code>http://localhost:8080</code> in your browser.</p> <p>For more information, see the documentation on using the VersaTiles server.</p>"},{"location":"guides/local_server_docker/","title":"How to run a local VersaTiles server using Docker","text":"<p>In this guide, we will explain how to set up and run a local VersaTiles server using docker.</p> <p>[!NOTE] The VersaTiles server is written in Rust (Repo: versatiles-rs). The docker containers are specified in the repo versatiles-docker</p>"},{"location":"guides/local_server_docker/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have docker properly installed.</p> <p>You also need to download the tiles.</p>"},{"location":"guides/local_server_docker/#usage","title":"Usage","text":"<p>Start the VersaTiles container with the latest image including the front-end user interface by executing the following command in the same folder where the file <code>*.versatiles</code> is located:</p> <pre><code>docker run -p 8080:8080 --mount src=\"$(pwd)\",dst=/tiles,type=bind,readonly versatiles/versatiles-frontend:latest-alpine \\\nversatiles serve -i \"0.0.0.0\" -s frontend.br.tar '[osm]/tiles/osm.versatiles'\n</code></pre> <p>Open <code>http://localhost:8080/</code> in your browser. It should look like this: Screenshot of the frontend</p>"},{"location":"guides/local_server_docker/#explanation","title":"Explanation","text":"<p>The Docker command example above contains quite a bit of information, so we should break it down: - <code>docker run</code> starts the Docker container. - <code>-p 8080:8080</code> maps the port 8080 inside of the container to the outside. - <code>--mount src=\"$(pwd)\",dst=/tiles,type=bind,readonly</code> mounts you current directory to <code>/tiles</code> inside of the container. - <code>versatiles/versatiles-frontend:latest-alpine</code> is the name of the Docker image. You can also choose one of the other images.</p> <p>Now we have configured docker run. The following arguments are for the VersaTiles server inside: - <code>versatiles server</code> run versatiles in server mode. - <code>-i \"0.0.0.0\"</code> listen on all networks. - <code>-s frontend.br.tar</code> adds the included frontend. - <code>'[osm]/tiles/osm.versatiles'</code> use the mounted <code>*.versatiles</code> file. Change this if your file has a different name.</p> <p>For more information, see the documentation on using the VersaTiles server.</p>"},{"location":"guides/local_server_mac/","title":"How to run a local VersaTiles server on MacOS","text":"<p>In this guide, we will explain how to set up and run a local VersaTiles server. We will also discuss how to download the necessary files and start the server with an optional frontend.</p> <p>[!NOTE] The VersaTiles server is written in Rust (Repo: versatiles-rs).</p>"},{"location":"guides/local_server_mac/#step-1-install-the-versatiles-tool","title":"Step 1: Install the VersaTiles tool","text":"<p>We provide precompiled binaries for multiple plattforms and architectures. See Installing Versatiles: Downloading the binary.</p> <p>You might prefer to compile it from source using Rust and Cargo: See Installing Versatiles: Building from source.</p> <p>But the most convenient way is to install it via Homebrew for MacOS</p>"},{"location":"guides/local_server_mac/#step-2-download-the-versatiles-planet","title":"Step 2: Download the VersaTiles planet","text":"<p>The VersaTiles data file is a compact file containing all map tiles for the entire planet. You can download it with <code>wget</code>:</p> <pre><code>wget -c https://download.versatiles.org/osm.versatiles\n</code></pre> <p>If you need only a part of the planet, e.g. only a continent/country/city, you can download this part using the <code>versatiles</code> tool. See: download tiles</p> <p>Once the download is complete, save the <code>.versatiles</code> file in a directory of your choice.</p>"},{"location":"guides/local_server_mac/#step-3-download-the-optional-frontend","title":"Step 3: Download the optional frontend","text":"<p>The frontend might be helpful because it includes JavaScript libraries, map styles, and fonts. You can download the latest frontend using <code>wget</code> by running the following command:</p> <pre><code>wget \"https://github.com/versatiles-org/versatiles-frontend/releases/latest/download/frontend.br.tar\"\n</code></pre> <p>Save the <code>frontend.br.tar</code> file in the same directory as the <code>.versatiles</code> file.</p>"},{"location":"guides/local_server_mac/#step-4-start-the-versatiles-server","title":"Step 4: Start the VersaTiles server","text":"<p>To start the VersaTiles server, open a shell, navigate to the directory where you saved the <code>.versatiles</code> file and the frontend file, and run:</p> <pre><code>versatiles serve -i 127.0.0.1 -s frontend.br.tar \"[osm]osm.versatiles\"\n</code></pre> <p>The VersaTiles server will now be running locally on your machine. To test it open <code>http://localhost:8080</code> in your browser.</p> <p>For more information, see the documentation on using the VersaTiles server.</p>"},{"location":"guides/use_tiles.versatiles.org.ko/","title":"\uacf5\uac1c\ub41c \ud0c0\uc77c \uc11c\ubc84 \uc0ac\uc6a9\ud558\uae30","text":"<p>\uc800\ud76c\ub294 tiles.versatiles.org\uc5d0\uc11c \uacf5\uac1c\ub41c \ubb34\ub8cc \ubca1\ud130 \ud0c0\uc77c \uc11c\ubc84\ub97c \uc6b4\uc601\ud569\ub2c8\ub2e4.</p> <p><code>https://tiles.versatiles.org/tiles/osm/{z}/{x}/{y}</code> URL \ud328\ud134\uc73c\ub85c \ud0c0\uc77c\uc5d0 \uc9c1\uc811 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ud0c0\uc77c, \uae00\uaf34, \uc544\uc774\ucf58\uc5d0 \ub300\ud55c \ubaa8\ub4e0 URL\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294 \uc0ac\uc804 \ube4c\ub4dc\ub41c \uc2a4\ud0c0\uc77c \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4: VersaTiles Style</p> <p>\uc544\ub798\ub294 \uc778\ud130\ub799\ud2f0\ube0c \ub9f5\uc744 \uc704\ud55c \uc624\ud508\uc18c\uc2a4 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc778 Maplibre\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9f5\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\ub294 HTML \uc608\uc81c\uc785\ub2c8\ub2e4. <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Versatiles: Demo Page&lt;/title&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n\n  &lt;link href=\"https://tiles.versatiles.org/assets/maplibre-gl/maplibre-gl.css\" rel=\"stylesheet\" /&gt;\n  &lt;link href=\"https://tiles.versatiles.org/assets/mapdesigner/mapdesigner-control.css\" rel=\"stylesheet\" /&gt;\n\n  &lt;script src=\"https://tiles.versatiles.org/assets/maplibre-gl/maplibre-gl.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"https://tiles.versatiles.org/assets/mapdesigner/mapdesigner-control.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"https://tiles.versatiles.org/assets/styles/versatiles-style.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;div id=\"map\" style=\"position: absolute;top: 0;bottom: 0;width: 100%;\"&gt;&lt;/div&gt;\n  &lt;script&gt;\n    const map = new maplibregl.Map({\n      container: 'map',\n      center: [127.105705, 37.513672],\n      zoom: 10\n    });\n\n    map.addControl(new maplibregl.NavigationControl(), 'top-right');\n    map.addControl(new MapDesignerControl({\n      tiles: ['https://tiles.versatiles.org/tiles/osm/{z}/{x}/{y}'],\n      sprite: 'https://tiles.versatiles.org/assets/sprites/sprites',\n      glyphs: 'https://tiles.versatiles.org/assets/fonts/{fontstack}/{range}.pbf',\n    }));\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"guides/use_tiles.versatiles.org/","title":"How to use tiles.versatiles.org?","text":"<p>We run a free vector tiles server open for public use at: tiles.versatiles.org.</p> <p>You can access tiles directly via the following URL pattern: <code>https://tiles.versatiles.org/tiles/osm/{z}/{x}/{y}</code>.</p> <p>You can also use one of our pre-built styles that already includes all the urls to tiles, fonts and icons: github.com/versatiles-org/versatiles-style/releases/latest</p> <p>Below is a minimal HTML example demonstrating how to implement a map using Maplibre, a popular open-source library for interactive maps.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n   &lt;meta charset=\"utf-8\" /&gt;\n   &lt;title&gt;VersaTiles - Demo&lt;/title&gt;\n   &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n   &lt;script src=\"https://tiles.versatiles.org/assets/maplibre/maplibre-gl.js\"&gt;&lt;/script&gt;\n   &lt;link href=\"https://tiles.versatiles.org/assets/maplibre/maplibre-gl.css\" rel=\"stylesheet\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   &lt;div id=\"map\" style=\"width: 100%; height: 80vh;\"&gt;&lt;/div&gt;\n   &lt;script&gt;\n      new maplibregl.Map({\n         container: 'map', // The container ID\n         style: 'https://tiles.versatiles.org/assets/styles/colorful.de.json' // Style URL\n      });\n   &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"guides/use_versatiles_in_qgis.ko/","title":"QGIS\uc5d0\uc11c VersaTiles \uc0ac\uc6a9\ud558\uae30","text":""},{"location":"guides/use_versatiles_in_qgis.ko/#_1","title":"\ub808\uc774\uc5b4 \uba54\ub274\uc5d0 \uc561\uc138\uc2a4","text":"<p>\uc0c1\ub2e8 \uba54\ub274\uc5d0\uc11c <code>\ub808\uc774\uc5b4</code>\ub97c \ud074\ub9ad\ud569\ub2c8\ub2e4. \ub4dc\ub86d\ub2e4\uc6b4 \uba54\ub274\uc5d0\uc11c <code>\ub808\uc774\uc5b4 \ucd94\uac00</code> \uc704\uc5d0 \ub9c8\uc6b0\uc2a4\ub97c \uc62c\ub824\ub193\uace0 <code>\ubca1\ud130 \ud0c0\uc77c \ub808\uc774\uc5b4 \ucd94\uac00...</code>\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4.</p> <p><code>\ub808\uc774\uc5b4 \u25ba</code> <code>\ub808\uc774\uc5b4 \ucd94\uac00 \u25ba</code> <code>\ubca1\ud130 \ud0c0\uc77c \ub808\uc774\uc5b4 \ucd94\uac00...</code></p>"},{"location":"guides/use_versatiles_in_qgis.ko/#_2","title":"\uc0c8 \uc5f0\uacb0 \ucd94\uac00","text":"<p><code>\ub370\uc774\ud130 \uc18c\uc2a4 \uad00\ub9ac\uc790 - \ubca1\ud130 \ud0c0\uc77c</code> \ucc3d\uc5d0\uc11c <code>\uc5f0\uacb0</code> \ub4dc\ub86d\ub2e4\uc6b4 \uc544\ub798\uc5d0 \uc788\ub294 <code>\uc0c8\ub85c \uc0dd\uc131</code> \ubc84\ud2bc\uc744 \ud074\ub9ad\ud569\ub2c8\ub2e4. \ub4dc\ub86d\ub2e4\uc6b4\uc5d0\uc11c <code>\uc0c8 \uc77c\ubc18 \uc5f0\uacb0...</code>\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4.</p> <p><code>\uc0c8\ub85c \uc0dd\uc131 \u25bc</code> <code>\uc0c8 \uc77c\ubc18 \uc5f0\uacb0...</code></p>"},{"location":"guides/use_versatiles_in_qgis.ko/#_3","title":"\uc5f0\uacb0 \uc138\ubd80 \uc815\ubcf4 \uc785\ub825","text":"<p><code>\ubca1\ud130 \ud0c0\uc77c \uc5f0\uacb0</code> \ub300\ud654 \uc0c1\uc790\uc5d0\uc11c \ub2e4\uc74c \uc138\ubd80 \uc815\ubcf4\ub97c \uc785\ub825\ud569\ub2c8\ub2e4. - \uc774\ub984: <code>VersaTiles</code>\ub97c \uc785\ub825\ud569\ub2c8\ub2e4. - URL: <code>https://tiles.versatiles.org/tiles/osm/{z}/{x}/{y}</code>\ub97c \uc785\ub825\ud569\ub2c8\ub2e4. - \ucd5c\uc18c/\ucd5c\ub300 \ud655\ub300 \uc218\uc900: <code>\ucd5c\uc18c \ud655\ub300/\ucd95\uc18c \uc218\uc900</code>\uc744 <code>0</code>\uc73c\ub85c, <code>\ucd5c\ub300 \ud655\ub300/\ucd95\uc18c \uc218\uc900</code>\uc744 <code>14</code>\ub85c \uc124\uc815\ud569\ub2c8\ub2e4.</p>"},{"location":"guides/use_versatiles_in_qgis.ko/#_4","title":"\uc5f0\uacb0 \uc800\uc7a5","text":"<p>\ud544\uc218 \uc815\ubcf4\ub97c \ubaa8\ub450 \uc785\ub825\ud55c \ud6c4 <code>\ud655\uc778</code>\uc744 \ud074\ub9ad\ud558\uc5ec \uc0c8 \uc5f0\uacb0\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4.</p>"},{"location":"guides/use_versatiles_in_qgis.ko/#_5","title":"\uc0c8 \uc5f0\uacb0 \uc120\ud0dd \ubc0f \ucd94\uac00","text":"<p>\uc774\uc81c <code>\uc5f0\uacb0</code> \ub4dc\ub86d\ub2e4\uc6b4\uc5d0\uc11c \uc0c8 \uc5f0\uacb0 <code>VersaTiles</code>\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. \ucc3d \uc624\ub978\ucabd \ud558\ub2e8\uc5d0 \uc788\ub294 <code>\ucd94\uac00</code> \ubc84\ud2bc\uc744 \ud074\ub9ad\ud569\ub2c8\ub2e4.  </p> <p>\ubca1\ud130 \ud0c0\uc77c \ub808\uc774\uc5b4\ub97c \ucd94\uac00\ud55c \ud6c4 <code>\ub2eb\uae30</code>\ub97c \ud074\ub9ad\ud558\uc5ec <code>\ub370\uc774\ud130 \uc18c\uc2a4 \uad00\ub9ac\uc790 - \ubca1\ud130 \ud0c0\uc77c</code> \ucc3d\uc744 \uc885\ub8cc\ud569\ub2c8\ub2e4.</p>"},{"location":"guides/use_versatiles_in_qgis/","title":"Using VersaTiles in QGIS","text":""},{"location":"guides/use_versatiles_in_qgis/#access-the-layer-menu","title":"Access the Layer Menu","text":"<p>In the top menu, click on <code>Layer</code>. From the dropdown menu, hover over <code>Add Layer</code> and then select <code>Add Vector Tile Layer...</code>.  </p> <p><code>Layer \u25ba</code> <code>Add Layer \u25ba</code> <code>Add Vector Tile Layer...</code></p>"},{"location":"guides/use_versatiles_in_qgis/#add-a-new-connection","title":"Add a New Connection","text":"<p>In the <code>Data Source Manager - Vector Tiles</code> window, click on the <code>New</code> button next to the <code>Connections</code> dropdown. From the dropdown, select <code>New Generic Connection...</code>.  </p> <p><code>New \u25bc</code> <code>New Generic Connection...</code></p>"},{"location":"guides/use_versatiles_in_qgis/#enter-connection-details","title":"Enter Connection Details","text":"<p>In the <code>Vector Tiles Connection</code> dialog, fill in the following details: - Name: Enter <code>VersaTiles</code>. - URL: Enter <code>https://tiles.versatiles.org/tiles/osm/{z}/{x}/{y}</code>. - Min/Max Zoom Level: Set <code>Min. Zoom Level</code> to <code>0</code> and <code>Max. Zoom Level</code> to <code>14</code>.</p>"},{"location":"guides/use_versatiles_in_qgis/#save-the-connection","title":"Save the Connection","text":"<p>After entering all the required information, click <code>OK</code> to save the new connection.</p>"},{"location":"guides/use_versatiles_in_qgis/#select-and-add-the-new-connection","title":"Select and Add the New Connection","text":"<p>Now select the new connection <code>VersaTiles</code> from the <code>Connection</code> dropdown. Click on the <code>Add</code> button at the bottom right of the window.  </p> <p>After adding the Vector Tile Layer, click <code>Close</code> to exit the <code>Data Source Manager - Vector Tiles</code> window.</p>"},{"location":"guides/what_about_mobile/","title":"What about mobile","text":"<p>MapLibre also provides MapLibre Native an open-source maps toolkit for Android, iOS and other platforms.</p> <p>Since both MapLibre GL JS and MapLibre Native share the same Style Specification, nothing special needs to be done to use Versatiles with MapLibre Native. For example, on iOS a Versatiles style URL can be passed to the initializer of <code>MLNMapView</code>.</p> <pre><code>MLNMapView(frame: .zero, styleURL: URL(string: \"https://tiles.versatiles.org/assets/styles/colorful.json\")\n</code></pre> <p>While on Android you would call the <code>setStyle</code> method on a <code>MapView</code> to set the style:</p> <pre><code>mapView.getMapAsync { map -&gt;\n    map.setStyle(\"https://tiles.versatiles.org/assets/styles/colorful.json\")\n}\n</code></pre> <p> </p> <p>Refer to the documentation of MapLibre Native for more information about using the toolkit.</p>"}]}